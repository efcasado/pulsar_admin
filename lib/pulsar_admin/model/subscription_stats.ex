# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule PulsarAdmin.Model.SubscriptionStats do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :activeConsumerName,
    :allowOutOfOrderDelivery,
    :backlogSize,
    :blockedSubscriptionOnUnackedMsgs,
    :bytesOutCounter,
    :chunkedMessageRate,
    :consumers,
    :consumersAfterMarkDeletePosition,
    :delayedMessageIndexSizeInBytes,
    :durable,
    :earliestMsgPublishTimeInBacklog,
    :filterAcceptedMsgCount,
    :filterProcessedMsgCount,
    :filterRejectedMsgCount,
    :filterRescheduledMsgCount,
    :keySharedMode,
    :lastAckedTimestamp,
    :lastConsumedFlowTimestamp,
    :lastConsumedTimestamp,
    :lastExpireTimestamp,
    :lastMarkDeleteAdvancedTimestamp,
    :messageAckRate,
    :msgBacklog,
    :msgBacklogNoDelayed,
    :msgDelayed,
    :msgOutCounter,
    :msgRateExpired,
    :msgRateOut,
    :msgRateRedeliver,
    :msgThroughputOut,
    :nonContiguousDeletedMessagesRanges,
    :nonContiguousDeletedMessagesRangesSerializedSize,
    :replicated,
    :subscriptionProperties,
    :totalMsgExpired,
    :type,
    :unackedMessages
  ]

  @type t :: %__MODULE__{
    :activeConsumerName => String.t | nil,
    :allowOutOfOrderDelivery => boolean() | nil,
    :backlogSize => integer() | nil,
    :blockedSubscriptionOnUnackedMsgs => boolean() | nil,
    :bytesOutCounter => integer() | nil,
    :chunkedMessageRate => integer() | nil,
    :consumers => [PulsarAdmin.Model.ConsumerStats.t] | nil,
    :consumersAfterMarkDeletePosition => %{optional(String.t) => String.t} | nil,
    :delayedMessageIndexSizeInBytes => integer() | nil,
    :durable => boolean() | nil,
    :earliestMsgPublishTimeInBacklog => integer() | nil,
    :filterAcceptedMsgCount => integer() | nil,
    :filterProcessedMsgCount => integer() | nil,
    :filterRejectedMsgCount => integer() | nil,
    :filterRescheduledMsgCount => integer() | nil,
    :keySharedMode => String.t | nil,
    :lastAckedTimestamp => integer() | nil,
    :lastConsumedFlowTimestamp => integer() | nil,
    :lastConsumedTimestamp => integer() | nil,
    :lastExpireTimestamp => integer() | nil,
    :lastMarkDeleteAdvancedTimestamp => integer() | nil,
    :messageAckRate => float() | nil,
    :msgBacklog => integer() | nil,
    :msgBacklogNoDelayed => integer() | nil,
    :msgDelayed => integer() | nil,
    :msgOutCounter => integer() | nil,
    :msgRateExpired => float() | nil,
    :msgRateOut => float() | nil,
    :msgRateRedeliver => float() | nil,
    :msgThroughputOut => float() | nil,
    :nonContiguousDeletedMessagesRanges => integer() | nil,
    :nonContiguousDeletedMessagesRangesSerializedSize => integer() | nil,
    :replicated => boolean() | nil,
    :subscriptionProperties => %{optional(String.t) => String.t} | nil,
    :totalMsgExpired => integer() | nil,
    :type => String.t | nil,
    :unackedMessages => integer() | nil
  }

  alias PulsarAdmin.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:consumers, :list, PulsarAdmin.Model.ConsumerStats)
  end
end

