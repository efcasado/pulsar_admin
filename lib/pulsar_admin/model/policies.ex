# NOTE: This file is auto generated by OpenAPI Generator 7.8.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule PulsarAdmin.Model.Policies do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :allowed_clusters,
    :auth_policies,
    :autoSubscriptionCreationOverride,
    :autoTopicCreationOverride,
    :backlog_quota_map,
    :bundles,
    :clusterDispatchRate,
    :clusterSubscribeRate,
    :compaction_threshold,
    :deduplicationEnabled,
    :deduplicationSnapshotIntervalSeconds,
    :delayed_delivery_policies,
    :deleted,
    :encryption_required,
    :entryFilters,
    :inactive_topic_policies,
    :is_allow_auto_update_schema,
    :latency_stats_sample_rate,
    :max_consumers_per_subscription,
    :max_consumers_per_topic,
    :max_producers_per_topic,
    :max_subscriptions_per_topic,
    :max_topics_per_namespace,
    :max_unacked_messages_per_consumer,
    :max_unacked_messages_per_subscription,
    :message_ttl_in_seconds,
    :offload_deletion_lag_ms,
    :offload_policies,
    :offload_threshold,
    :offload_threshold_in_seconds,
    :persistence,
    :properties,
    :publishMaxMessageRate,
    :replication_clusters,
    :replicatorDispatchRate,
    :resource_group_name,
    :retention_policies,
    :schema_auto_update_compatibility_strategy,
    :schema_compatibility_strategy,
    :schema_validation_enforced,
    :subscriptionDispatchRate,
    :subscription_auth_mode,
    :subscription_expiration_time_minutes,
    :subscription_types_enabled,
    :topicDispatchRate
  ]

  @type t :: %__MODULE__{
    :allowed_clusters => [String.t] | nil,
    :auth_policies => PulsarAdmin.Model.AuthPolicies.t | nil,
    :autoSubscriptionCreationOverride => PulsarAdmin.Model.AutoSubscriptionCreationOverride.t | nil,
    :autoTopicCreationOverride => PulsarAdmin.Model.AutoTopicCreationOverride.t | nil,
    :backlog_quota_map => %{optional(String.t) => PulsarAdmin.Model.BacklogQuota.t} | nil,
    :bundles => PulsarAdmin.Model.BundlesData.t | nil,
    :clusterDispatchRate => %{optional(String.t) => PulsarAdmin.Model.DispatchRateImpl.t} | nil,
    :clusterSubscribeRate => %{optional(String.t) => PulsarAdmin.Model.SubscribeRate.t} | nil,
    :compaction_threshold => integer() | nil,
    :deduplicationEnabled => boolean() | nil,
    :deduplicationSnapshotIntervalSeconds => integer() | nil,
    :delayed_delivery_policies => PulsarAdmin.Model.DelayedDeliveryPolicies.t | nil,
    :deleted => boolean() | nil,
    :encryption_required => boolean() | nil,
    :entryFilters => PulsarAdmin.Model.EntryFilters.t | nil,
    :inactive_topic_policies => PulsarAdmin.Model.InactiveTopicPolicies.t | nil,
    :is_allow_auto_update_schema => boolean() | nil,
    :latency_stats_sample_rate => %{optional(String.t) => integer()} | nil,
    :max_consumers_per_subscription => integer() | nil,
    :max_consumers_per_topic => integer() | nil,
    :max_producers_per_topic => integer() | nil,
    :max_subscriptions_per_topic => integer() | nil,
    :max_topics_per_namespace => integer() | nil,
    :max_unacked_messages_per_consumer => integer() | nil,
    :max_unacked_messages_per_subscription => integer() | nil,
    :message_ttl_in_seconds => integer() | nil,
    :offload_deletion_lag_ms => integer() | nil,
    :offload_policies => PulsarAdmin.Model.OffloadPolicies.t | nil,
    :offload_threshold => integer() | nil,
    :offload_threshold_in_seconds => integer() | nil,
    :persistence => PulsarAdmin.Model.PersistencePolicies.t | nil,
    :properties => %{optional(String.t) => String.t} | nil,
    :publishMaxMessageRate => %{optional(String.t) => PulsarAdmin.Model.PublishRate.t} | nil,
    :replication_clusters => [String.t] | nil,
    :replicatorDispatchRate => %{optional(String.t) => PulsarAdmin.Model.DispatchRateImpl.t} | nil,
    :resource_group_name => String.t | nil,
    :retention_policies => PulsarAdmin.Model.RetentionPolicies.t | nil,
    :schema_auto_update_compatibility_strategy => String.t | nil,
    :schema_compatibility_strategy => String.t | nil,
    :schema_validation_enforced => boolean() | nil,
    :subscriptionDispatchRate => %{optional(String.t) => PulsarAdmin.Model.DispatchRateImpl.t} | nil,
    :subscription_auth_mode => String.t | nil,
    :subscription_expiration_time_minutes => integer() | nil,
    :subscription_types_enabled => [String.t] | nil,
    :topicDispatchRate => %{optional(String.t) => PulsarAdmin.Model.DispatchRateImpl.t} | nil
  }

  alias PulsarAdmin.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:auth_policies, :struct, PulsarAdmin.Model.AuthPolicies)
     |> Deserializer.deserialize(:autoSubscriptionCreationOverride, :struct, PulsarAdmin.Model.AutoSubscriptionCreationOverride)
     |> Deserializer.deserialize(:autoTopicCreationOverride, :struct, PulsarAdmin.Model.AutoTopicCreationOverride)
     |> Deserializer.deserialize(:backlog_quota_map, :map, PulsarAdmin.Model.BacklogQuota)
     |> Deserializer.deserialize(:bundles, :struct, PulsarAdmin.Model.BundlesData)
     |> Deserializer.deserialize(:clusterDispatchRate, :map, PulsarAdmin.Model.DispatchRateImpl)
     |> Deserializer.deserialize(:clusterSubscribeRate, :map, PulsarAdmin.Model.SubscribeRate)
     |> Deserializer.deserialize(:delayed_delivery_policies, :struct, PulsarAdmin.Model.DelayedDeliveryPolicies)
     |> Deserializer.deserialize(:entryFilters, :struct, PulsarAdmin.Model.EntryFilters)
     |> Deserializer.deserialize(:inactive_topic_policies, :struct, PulsarAdmin.Model.InactiveTopicPolicies)
     |> Deserializer.deserialize(:offload_policies, :struct, PulsarAdmin.Model.OffloadPolicies)
     |> Deserializer.deserialize(:persistence, :struct, PulsarAdmin.Model.PersistencePolicies)
     |> Deserializer.deserialize(:publishMaxMessageRate, :map, PulsarAdmin.Model.PublishRate)
     |> Deserializer.deserialize(:replicatorDispatchRate, :map, PulsarAdmin.Model.DispatchRateImpl)
     |> Deserializer.deserialize(:retention_policies, :struct, PulsarAdmin.Model.RetentionPolicies)
     |> Deserializer.deserialize(:subscriptionDispatchRate, :map, PulsarAdmin.Model.DispatchRateImpl)
     |> Deserializer.deserialize(:topicDispatchRate, :map, PulsarAdmin.Model.DispatchRateImpl)
  end
end

