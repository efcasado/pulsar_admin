function openapi-generator-cli() {
    OPENAPI_GENERATOR_CLI_VERSION=${OPENAPI_GENERATOR_CLI_VERSION:-v7.8.0}
    DOCKER_IMAGE=openapitools/openapi-generator-cli:${OPENAPI_GENERATOR_CLI_VERSION}
    DOCKER_RUN_OPTS="--rm --network host -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -u $(id -u):$(id -g) -v ${PWD}:${PWD} -w ${PWD} ${DOCKER_RUN_EXTRA_OPTS}"
    
    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} ${DOCKER_IMAGE} "$@"
    else
        docker run ${DOCKER_RUN_OPTS} ${DOCKER_IMAGE} "$@"
    fi
}

function elixir() {
    ELIXIR_VERSION=${ELIXIR_VERSION:-1.15.6}
    DOCKER_IMAGE=elixir:${ELIXIR_VERSION}
    DOCKER_RUN_OPTS="--rm -i --network host -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -u $(id -u):$(id -g) -v ${PWD}:${PWD} -w ${PWD} -e HEX_HOME=${PWD} -e MIX_HOME=${PWD} ${DOCKER_RUN_EXTRA_OPTS}"
    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} ${DOCKER_IMAGE} elixir "$@"
    else
        docker run ${DOCKER_RUN_OPTS} ${DOCKER_IMAGE} elixir "$@"
    fi
}

function iex() {
    ELIXIR_VERSION=${ELIXIR_VERSION:-1.15.6}
    DOCKER_IMAGE=elixir:${ELIXIR_VERSION}
    DOCKER_RUN_OPTS="--rm -it --network host -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -u $(id -u):$(id -g) -v ${PWD}:${PWD} -w ${PWD} -e HEX_HOME=${PWD} -e MIX_HOME=${PWD} ${DOCKER_RUN_EXTRA_OPTS}"
    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} ${DOCKER_IMAGE} iex "$@"
    else
        docker run ${DOCKER_RUN_OPTS} ${DOCKER_IMAGE} iex "$@"
    fi
}

function mix() {
    ELIXIR_VERSION=${ELIXIR_VERSION:-1.15.6}
    DOCKER_IMAGE=elixir:${ELIXIR_VERSION}
    DOCKER_RUN_OPTS="--rm -it --network host -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro -u $(id -u):$(id -g) -v ${PWD}:${PWD} -w ${PWD} -e HEX_HOME=${PWD} -e MIX_HOME=${PWD} ${DOCKER_RUN_EXTRA_OPTS}"
    if [ -n "$ZSH_VERSION" ]; then
        docker run ${=DOCKER_RUN_OPTS} ${DOCKER_IMAGE} mix "$@"
    else
        docker run ${DOCKER_RUN_OPTS} ${DOCKER_IMAGE} mix "$@"
    fi
}
