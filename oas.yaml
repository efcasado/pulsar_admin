openapi: 3.0.1
info:
  title: Pulsar Admin REST API
  description: This provides the REST API for admin operations
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v2
servers:
- url: /admin/v2
tags:
- name: bookies
- name: broker-stats
- name: brokers
- name: clusters
- name: namespaces
- name: non-persistent topic
- name: persistent topic
- name: resource-quotas
- name: resourcegroups
- name: schemas
- name: tenants
paths:
  /bookies/all:
    get:
      tags:
      - bookies
      summary: Gets raw information for all the bookies in the cluster
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookiesClusterInfo'
        "403":
          description: Don't have admin permission
          content: {}
  /bookies/racks-info:
    get:
      tags:
      - bookies
      summary: Gets the rack placement information for all the bookies in the cluster
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/BookieInfo'
        "403":
          description: Don't have admin permission
          content: {}
  /bookies/racks-info/{bookie}:
    get:
      tags:
      - bookies
      summary: Gets the rack placement information for a specific bookie in the cluster
      parameters:
      - name: bookie
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookieInfo'
        "403":
          description: Don't have admin permission
          content: {}
    post:
      tags:
      - bookies
      summary: Updates the rack placement information for a specific bookie in the
        cluster (note. bookie address format:`address:port`)
      parameters:
      - name: bookie
        in: path
        description: The bookie address
        required: true
        schema:
          type: string
      - name: group
        in: query
        description: The group
        required: true
        schema:
          type: string
      requestBody:
        description: The bookie info
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BookieInfo'
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - bookies
      summary: Removed the rack placement information for a specific bookie in the
        cluster
      parameters:
      - name: bookie
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
  /broker-stats/allocator-stats/{allocator}:
    get:
      tags:
      - broker-stats
      summary: Get the stats for the Netty allocator. Available allocators are 'default'
        and 'ml-cache'
      parameters:
      - name: allocator
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocatorStats'
        "403":
          description: Don't have admin permission
          content: {}
  /broker-stats/bookieops:
    get:
      tags:
      - broker-stats
      summary: Get pending bookie client op stats by namespace
      description: "Returns a nested map structure which Swagger does not fully support\
        \ for display. Structure: Map<String, Map<String, PendingBookieOpsStats>>.\
        \ Please refer to this structure for details."
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/PendingBookieOpsStats'
        "403":
          description: Don't have admin permission
          content: {}
  /broker-stats/broker-resource-availability/{tenant}/{namespace}:
    get:
      tags:
      - broker-stats
      summary: Broker availability report
      description: "This API gives the current broker availability in percent, each\
        \ resource percentage usage is calculated and thensum of all of the resource\
        \ usage percent is called broker-resource-availability<br/><br/>THIS API IS\
        \ ONLY FOR USE BY TESTING FOR CONFIRMING NAMESPACE ALLOCATION ALGORITHM"
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "Returns broker resource availability as Map<Long, List<ResourceUnit>>.Since\
            \ `ResourceUnit` is an interface, its specific content is not determinable\
            \ via class reflection. Refer to the source code or interface tests for\
            \ detailed type definitions."
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/ResourceUnit'
        "403":
          description: Don't have admin permission
          content: {}
        "409":
          description: Load-manager doesn't support operation
          content: {}
  /broker-stats/load-report:
    get:
      tags:
      - broker-stats
      summary: Get Load for this broker
      description: consists of topics stats & systemResourceUsage
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadReport'
        "403":
          description: Don't have admin permission
          content: {}
  /broker-stats/mbeans:
    get:
      tags:
      - broker-stats
      summary: Get all the mbean details of this broker JVM
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metrics'
        "403":
          description: Don't have admin permission
          content: {}
  /broker-stats/metrics:
    get:
      tags:
      - broker-stats
      summary: Gets the metrics for Monitoring
      description: Requested should be executed by Monitoring agent on each broker
        to fetch the metrics
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metrics'
        "403":
          description: Don't have admin permission
          content: {}
  /broker-stats/topics:
    get:
      tags:
      - broker-stats
      summary: Get all the topic stats by namespace
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputStream'
        "403":
          description: Don't have admin permission
          content: {}
  /brokers:
    get:
      tags:
      - brokers
      summary: Get the list of active brokers (broker ids) in the local cluster.If
        authorization is not enabled
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "401":
          description: Authentication required
          content: {}
        "403":
          description: This operation requires super-user access
          content: {}
  /brokers/backlog-quota-check:
    get:
      tags:
      - brokers
      summary: An REST endpoint to trigger backlogQuotaCheck
      responses:
        "204":
          description: Everything is OK
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "500":
          description: Internal server error
          content: {}
  /brokers/configuration:
    get:
      tags:
      - brokers
      summary: Get all updatable dynamic configurations's name
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: You don't have admin permission to get configuration
          content: {}
  /brokers/configuration/runtime:
    get:
      tags:
      - brokers
      summary: Get all runtime configurations. This operation requires Pulsar super-user
        privileges.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
  /brokers/configuration/values:
    get:
      tags:
      - brokers
      summary: Get value of all dynamic configurations' value overridden on local
        config
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: You don't have admin permission to view configuration
          content: {}
        "404":
          description: Configuration not found
          content: {}
        "500":
          description: Internal server error
          content: {}
  /brokers/configuration/{configName}:
    delete:
      tags:
      - brokers
      summary: Delete dynamic ServiceConfiguration into metadata only. This operation
        requires Pulsar super-user privileges.
      parameters:
      - name: configName
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Service configuration delete successfully
          content: {}
        "403":
          description: You don't have admin permission to update service-configuration
          content: {}
        "412":
          description: Invalid dynamic-config value
          content: {}
        "500":
          description: Internal server error
          content: {}
  /brokers/configuration/{configName}/{configValue}:
    post:
      tags:
      - brokers
      summary: Update dynamic serviceconfiguration into zk only. This operation requires
        Pulsar super-user privileges.
      parameters:
      - name: configName
        in: path
        required: true
        schema:
          type: string
      - name: configValue
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Service configuration updated successfully
          content: {}
        "403":
          description: You don't have admin permission to update service-configuration
          content: {}
        "404":
          description: Configuration not found
          content: {}
        "412":
          description: Invalid dynamic-config value
          content: {}
        "500":
          description: Internal server error
          content: {}
  /brokers/health:
    get:
      tags:
      - brokers
      summary: Run a healthCheck against the broker
      parameters:
      - name: topicVersion
        in: query
        description: Topic Version
        schema:
          type: string
          enum:
          - V1
          - V2
      responses:
        "200":
          description: Everything is OK
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Cluster doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
  /brokers/internal-configuration:
    get:
      tags:
      - brokers
      summary: Get the internal configuration data
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalConfigurationData'
        "403":
          description: Don't have admin permission
          content: {}
  /brokers/leaderBroker:
    get:
      tags:
      - brokers
      summary: Get the information of the leader broker.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerInfo'
        "401":
          description: Authentication required
          content: {}
        "403":
          description: This operation requires super-user access
          content: {}
        "404":
          description: Leader broker not found
          content: {}
  /brokers/ready:
    get:
      tags:
      - brokers
      summary: Check if the broker is fully initialized
      responses:
        "200":
          description: Broker is ready
          content: {}
        "500":
          description: Broker is not ready
          content: {}
  /brokers/shutdown:
    post:
      tags:
      - brokers
      summary: Shutdown broker gracefully.
      parameters:
      - name: maxConcurrentUnloadPerSec
        in: query
        description: if the value absent(value=0) means no concurrent limitation.
        schema:
          type: integer
          format: int32
      - name: forcedTerminateTopic
        in: query
        schema:
          type: boolean
          default: true
      responses:
        "204":
          description: Execute shutdown command successfully
          content: {}
        "403":
          description: You don't have admin permission to update service-configuration
          content: {}
        "500":
          description: Internal server error
          content: {}
  /brokers/version:
    get:
      tags:
      - brokers
      summary: Get version of current broker
      responses:
        "200":
          description: The Pulsar version
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal server error
          content: {}
  /brokers/{clusterName}/{brokerId}/ownedNamespaces:
    get:
      tags:
      - brokers
      summary: Get the list of namespaces served by the specific broker id
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          type: string
      - name: brokerId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/NamespaceOwnershipStatus'
        "307":
          description: Current broker doesn't serve the cluster
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Cluster doesn't exist
          content: {}
  /brokers/{cluster}:
    get:
      tags:
      - brokers
      summary: "Get the list of active brokers (broker ids) in the cluster.If authorization\
        \ is not enabled, any cluster name is valid."
      parameters:
      - name: cluster
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "307":
          description: Current broker doesn't serve this cluster
          content: {}
        "401":
          description: Authentication required
          content: {}
        "403":
          description: This operation requires super-user access
          content: {}
        "404":
          description: "Cluster does not exist: cluster={clustername}"
          content: {}
  /clusters:
    get:
      tags:
      - clusters
      summary: Get the list of all the Pulsar clusters.
      responses:
        "200":
          description: Return a list of clusters.
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "500":
          description: Internal server error.
          content: {}
  /clusters/{cluster}:
    get:
      tags:
      - clusters
      summary: Get the configuration for the specified cluster.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Return the cluster data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterData'
        "403":
          description: Don't have admin permission.
          content: {}
        "404":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
    put:
      tags:
      - clusters
      summary: Create a new cluster.
      description: "This operation requires Pulsar superuser privileges, and the name\
        \ cannot contain the '/' characters."
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      requestBody:
        description: The cluster data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ClusterData'
        required: true
      responses:
        "200":
          description: Cluster has been created.
          content: {}
        "400":
          description: Bad request parameter.
          content: {}
        "403":
          description: You don't have admin permission to create the cluster.
          content: {}
        "409":
          description: Cluster already exists.
          content: {}
        "412":
          description: Cluster name is not valid.
          content: {}
        "500":
          description: Internal server error.
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - clusters
      summary: Update the configuration for a cluster.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      requestBody:
        description: The cluster data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ClusterData'
        required: true
      responses:
        "200":
          description: Cluster has been updated.
          content: {}
        "400":
          description: Bad request parameter.
          content: {}
        "403":
          description: Don't have admin permission or policies are read-only.
          content: {}
        "404":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - clusters
      summary: Delete an existing cluster.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Cluster has been deleted.
          content: {}
        "403":
          description: Don't have admin permission or policies are read-only.
          content: {}
        "404":
          description: Cluster doesn't exist.
          content: {}
        "412":
          description: Cluster is not empty.
          content: {}
        "500":
          description: Internal server error.
          content: {}
  /clusters/{cluster}/failureDomains:
    get:
      tags:
      - clusters
      summary: Get the cluster failure domains.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/FailureDomain'
        "403":
          description: Don't have admin permission
          content: {}
        "500":
          description: Internal server error
          content: {}
  /clusters/{cluster}/failureDomains/{domainName}:
    get:
      tags:
      - clusters
      summary: Get a domain in a cluster
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      - name: domainName
        in: path
        description: The failure domain name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailureDomain'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: FailureDomain doesn't exist
          content: {}
        "412":
          description: Cluster doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - clusters
      summary: Set the failure domain of the cluster.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      - name: domainName
        in: path
        description: The failure domain name
        required: true
        schema:
          type: string
      requestBody:
        description: The configuration data of a failure domain
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FailureDomain'
        required: true
      responses:
        "204":
          description: Set the failure domain of the cluster successfully.
          content: {}
        "403":
          description: Don't have admin permission.
          content: {}
        "404":
          description: Failure domain doesn't exist.
          content: {}
        "409":
          description: Broker already exists in another domain.
          content: {}
        "412":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - clusters
      summary: Delete the failure domain of the cluster
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      - name: domainName
        in: path
        description: The failure domain name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Delete the failure domain of the cluster successfully
          content: {}
        "403":
          description: Don't have admin permission or policy is read only
          content: {}
        "404":
          description: FailureDomain doesn't exist
          content: {}
        "412":
          description: Cluster doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
  /clusters/{cluster}/migrate:
    post:
      tags:
      - clusters
      summary: Update the configuration for a cluster migration.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      - name: migrated
        in: query
        description: Is cluster migrated
        required: true
        schema:
          type: boolean
      requestBody:
        description: The cluster url data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ClusterUrl'
        required: true
      responses:
        "200":
          description: Cluster has been updated.
          content: {}
        "400":
          description: Cluster url must not be empty.
          content: {}
        "403":
          description: Don't have admin permission or policies are read-only.
          content: {}
        "404":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
      x-codegen-request-body-name: body
  /clusters/{cluster}/namespaceIsolationPolicies:
    get:
      tags:
      - clusters
      summary: Get the namespace isolation policies assigned to the cluster.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/NamespaceIsolationData'
        "403":
          description: Don't have admin permission.
          content: {}
        "404":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
  /clusters/{cluster}/namespaceIsolationPolicies/brokers:
    get:
      tags:
      - clusters
      summary: Get list of brokers with namespace-isolation policies attached to them.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/BrokerNamespaceIsolationData'
        "403":
          description: Don't have admin permission.
          content: {}
        "404":
          description: Namespace-isolation policies not found.
          content: {}
        "412":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
  /clusters/{cluster}/namespaceIsolationPolicies/brokers/{broker}:
    get:
      tags:
      - clusters
      summary: Get a broker with namespace-isolation policies attached to it.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      - name: broker
        in: path
        description: The broker name (<broker-hostname>:<web-service-port>)
        required: true
        schema:
          type: string
        example: broker1:8080
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerNamespaceIsolationData'
        "403":
          description: Don't have admin permission.
          content: {}
        "404":
          description: Namespace-isolation policies/ Broker not found.
          content: {}
        "412":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
  /clusters/{cluster}/namespaceIsolationPolicies/{policyName}:
    get:
      tags:
      - clusters
      summary: Get the single namespace isolation policy assigned to the cluster.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      - name: policyName
        in: path
        description: The name of the namespace isolation policy
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceIsolationData'
        "403":
          description: Don't have admin permission.
          content: {}
        "404":
          description: Policy doesn't exist.
          content: {}
        "412":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
    post:
      tags:
      - clusters
      summary: Set namespace isolation policy.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      - name: policyName
        in: path
        description: The namespace isolation policy name
        required: true
        schema:
          type: string
      requestBody:
        description: The namespace isolation policy data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NamespaceIsolationData'
        required: true
      responses:
        "204":
          description: Set namespace isolation policy successfully.
          content: {}
        "400":
          description: Namespace isolation policy data is invalid.
          content: {}
        "403":
          description: Don't have admin permission or policies are read-only.
          content: {}
        "404":
          description: Namespace isolation policy doesn't exist.
          content: {}
        "412":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - clusters
      summary: Delete namespace isolation policy.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      - name: policyName
        in: path
        description: The namespace isolation policy name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Delete namespace isolation policy successfully.
          content: {}
        "403":
          description: Don't have admin permission or policies are read only.
          content: {}
        "404":
          description: Namespace isolation policy doesn't exist.
          content: {}
        "412":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
  /clusters/{cluster}/peers:
    get:
      tags:
      - clusters
      summary: Get the peer-cluster data for the specified cluster.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission.
          content: {}
        "404":
          description: Cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
    post:
      tags:
      - clusters
      summary: Update peer-cluster-list for a cluster.
      description: This operation requires Pulsar superuser privileges.
      parameters:
      - name: cluster
        in: path
        description: The cluster name
        required: true
        schema:
          type: string
      requestBody:
        description: The list of peer cluster names
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "204":
          description: Cluster has been updated.
          content: {}
        "403":
          description: Don't have admin permission or policies are read-only.
          content: {}
        "404":
          description: Cluster doesn't exist.
          content: {}
        "412":
          description: Peer cluster doesn't exist.
          content: {}
        "500":
          description: Internal server error.
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{cluster}/antiAffinity/{group}:
    get:
      tags:
      - namespaces
      summary: Get all namespaces that are grouped by given anti-affinity group in
        a given cluster. api can be only accessed by admin of any of the existing
        tenant
      parameters:
      - name: cluster
        in: path
        required: true
        schema:
          type: string
      - name: group
        in: path
        required: true
        schema:
          type: string
      - name: tenant
        in: query
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "412":
          description: Cluster not exist/Anti-affinity group can't be empty.
          content: {}
  /namespaces/{property}/{namespace}/persistence/bookieAffinity:
    get:
      tags:
      - namespaces
      summary: Get the bookie-affinity-group from namespace-local policy.
      parameters:
      - name: property
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookieAffinityGroupDataImpl'
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    delete:
      tags:
      - namespaces
      summary: Delete the bookie-affinity-group from namespace-local policy.
      parameters:
      - name: property
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}:
    get:
      tags:
      - namespaces
      summary: Get the list of all the namespaces for a certain tenant.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}:
    get:
      tags:
      - namespaces
      summary: Get the dump all the policies specified for a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
    put:
      tags:
      - namespaces
      summary: Creates a new namespace with the specified policies
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Policies for the namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster doesn't exist
          content: {}
        "409":
          description: Namespace already exists
          content: {}
        "412":
          description: Namespace name is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Delete a namespace and all the topics under it.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: force
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "405":
          description: Broker doesn't allow forced deletion of namespaces
          content: {}
        "409":
          description: Namespace is not empty
          content: {}
  /namespaces/{tenant}/{namespace}/allowedClusters:
    get:
      tags:
      - namespaces
      summary: Get the allowed clusters for a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Namespace is not global
          content: {}
    post:
      tags:
      - namespaces
      summary: Set the allowed clusters for a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: List of allowed clusters
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: The list of allowed clusters should include all replication
            clusters.
          content: {}
        "403":
          description: The requester does not have admin permissions.
          content: {}
        "404":
          description: "The specified tenant, cluster, or namespace does not exist."
          content: {}
        "409":
          description: A peer-cluster cannot be part of an allowed-cluster.
          content: {}
        "412":
          description: The namespace is not global or the provided cluster IDs are
            invalid.
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/antiAffinity:
    get:
      tags:
      - namespaces
      summary: Get anti-affinity group of a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set anti-affinity group for a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Anti-affinity group for the specified namespace
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Invalid antiAffinityGroup
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove anti-affinity group of a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/autoSubscriptionCreation:
    get:
      tags:
      - namespaces
      summary: Get autoSubscriptionCreation info in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoSubscriptionCreationOverrideImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Override broker's allowAutoSubscriptionCreation setting for a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Settings for automatic subscription creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoSubscriptionCreationOverride'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Invalid autoSubscriptionCreation override
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove override of broker's allowAutoSubscriptionCreation in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/autoTopicCreation:
    get:
      tags:
      - namespaces
      summary: Get autoTopicCreation info in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoTopicCreationOverrideImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Override broker's allowAutoTopicCreation setting for a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Settings for automatic topic creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoTopicCreationOverride'
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Invalid autoTopicCreation override
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "406":
          description: The number of partitions should be less than or equal to maxNumPartitionsPerPartitionedTopic
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove override of broker's allowAutoTopicCreation in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/backlogQuota:
    post:
      tags:
      - namespaces
      summary: ' Set a backlog quota for all the topics on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: backlogQuotaType
        in: query
        schema:
          type: string
          enum:
          - destination_storage
          - message_age
      requestBody:
        description: Backlog quota for all topics of the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BacklogQuota'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Specified backlog quota exceeds retention quota. Increase retention
            quota and retry request
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove a backlog quota policy from a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: backlogQuotaType
        in: query
        schema:
          type: string
          enum:
          - destination_storage
          - message_age
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/backlogQuotaMap:
    get:
      tags:
      - namespaces
      summary: Get backlog quota map on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/BacklogQuotaImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/bundles:
    get:
      tags:
      - namespaces
      summary: Get the bundles split data.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundlesDataImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Namespace is not setup to split in bundles
          content: {}
  /namespaces/{tenant}/{namespace}/clearBacklog:
    post:
      tags:
      - namespaces
      summary: Clear backlog for all topics on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/clearBacklog/{subscription}:
    post:
      tags:
      - namespaces
      summary: Clear backlog for a given subscription on all topics on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: subscription
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/compactionThreshold:
    get:
      tags:
      - namespaces
      summary: Maximum number of uncompacted bytes in topics before compaction is
        triggered.
      description: The backlog size is compared to the threshold periodically. A threshold
        of 0 disabled automatic compaction
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
    put:
      tags:
      - namespaces
      summary: Set maximum number of uncompacted bytes in a topic before compaction
        is triggered.
      description: The backlog size is compared to the threshold periodically. A threshold
        of 0 disabled automatic compaction
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Maximum number of uncompacted bytes in a topic of the specified
          namespace
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: compactionThreshold value is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Delete maximum number of uncompacted bytes in a topic before compaction
        is triggered.
      description: The backlog size is compared to the threshold periodically. A threshold
        of 0 disabled automatic compaction
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/deduplication:
    get:
      tags:
      - namespaces
      summary: Get broker side deduplication for all topics in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Enable or disable broker side deduplication for all topics in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Flag for disabling or enabling broker side deduplication for
          all topics in the specified namespace
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove broker side deduplication for all topics in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/deduplicationSnapshotInterval:
    get:
      tags:
      - namespaces
      summary: Get deduplicationSnapshotInterval config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set deduplicationSnapshotInterval config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Interval to take deduplication snapshot per topic
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/delayedDelivery:
    get:
      tags:
      - namespaces
      summary: Get delayed delivery messages config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelayedDeliveryPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - namespaces
      summary: Set delayed delivery messages config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Delayed delivery policies for the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DelayedDeliveryPolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Delete delayed delivery messages config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/dispatchRate:
    get:
      tags:
      - namespaces
      summary: "Get dispatch-rate configured for the namespace, null means dispatch-rate\
        \ not configured, -1 means msg-dispatch-rate or byte-dispatch-rate not configured\
        \ in dispatch-rate yet"
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set dispatch-rate throttling for all topics of the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Dispatch rate for all topics of the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Delete dispatch-rate throttling for all topics of the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
  /namespaces/{tenant}/{namespace}/encryptionRequired:
    get:
      tags:
      - namespaces
      summary: Get message encryption required status in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Message encryption is required or not for all topics in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Flag defining if message encryption is required
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/entryFilters:
    get:
      tags:
      - namespaces
      summary: Get maxConsumersPerSubscription config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryFilters'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set entry filters for namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: entry filters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntryFilters'
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Specified entry filters are not valid
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove entry filters for namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Invalid TTL
          content: {}
  /namespaces/{tenant}/{namespace}/inactiveTopicPolicies:
    get:
      tags:
      - namespaces
      summary: Get inactive topic policies config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveTopicPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - namespaces
      summary: Set inactive topic policies config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Inactive topic policies for the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InactiveTopicPolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove inactive topic policies from a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/isAllowAutoUpdateSchema:
    get:
      tags:
      - namespaces
      summary: The flag of whether allow auto update schema
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - namespaces
      summary: Update flag of whether allow auto update schema
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Flag of whether to allow auto update schema
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/maxConsumersPerSubscription:
    get:
      tags:
      - namespaces
      summary: Get maxConsumersPerSubscription config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: ' Set maxConsumersPerSubscription configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Number of maximum consumers per subscription
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: maxConsumersPerSubscription value is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: ' Set maxConsumersPerSubscription configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: maxConsumersPerSubscription value is not valid
          content: {}
  /namespaces/{tenant}/{namespace}/maxConsumersPerTopic:
    get:
      tags:
      - namespaces
      summary: Get maxConsumersPerTopic config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: ' Set maxConsumersPerTopic configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Number of maximum consumers per topic
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: maxConsumersPerTopic value is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove maxConsumersPerTopic configuration on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/maxProducersPerTopic:
    get:
      tags:
      - namespaces
      summary: Get maxProducersPerTopic config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: ' Set maxProducersPerTopic configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Number of maximum producers per topic
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: maxProducersPerTopic value is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove maxProducersPerTopic configuration on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/maxSubscriptionsPerTopic:
    get:
      tags:
      - namespaces
      summary: Get maxSubscriptionsPerTopic config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: ' Set maxSubscriptionsPerTopic configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Number of maximum subscriptions per topic
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: maxUnackedMessagesPerSubscription value is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove maxSubscriptionsPerTopic configuration on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/maxTopicsPerNamespace:
    get:
      tags:
      - namespaces
      summary: Get maxTopicsPerNamespace config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set maxTopicsPerNamespace config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Number of maximum topics for specific namespace
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove maxTopicsPerNamespace config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/maxUnackedMessagesPerConsumer:
    get:
      tags:
      - namespaces
      summary: Get maxUnackedMessagesPerConsumer config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: ' Set maxConsumersPerTopic configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Number of maximum unacked messages per consumer
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: maxUnackedMessagesPerConsumer value is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove maxUnackedMessagesPerConsumer config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/maxUnackedMessagesPerSubscription:
    get:
      tags:
      - namespaces
      summary: Get maxUnackedMessagesPerSubscription config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: ' Set maxUnackedMessagesPerSubscription configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Number of maximum unacked messages per subscription
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: maxUnackedMessagesPerSubscription value is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove maxUnackedMessagesPerSubscription config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/messageTTL:
    get:
      tags:
      - namespaces
      summary: Get the message TTL for the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set message TTL in seconds for namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: TTL in seconds for the specified namespace
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Invalid TTL
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove message TTL in seconds for namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Invalid TTL
          content: {}
  /namespaces/{tenant}/{namespace}/offloadDeletionLagMs:
    get:
      tags:
      - namespaces
      summary: Number of milliseconds to wait before deleting a ledger segment which
        has been offloaded from the Pulsar cluster's local storage (i.e. BookKeeper)
      description: A negative value denotes that deletion has been completely disabled.
        'null' denotes that the topics in the namespace will fall back to the broker
        default for deletion lag.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
    put:
      tags:
      - namespaces
      summary: Set number of milliseconds to wait before deleting a ledger segment
        which has been offloaded from the Pulsar cluster's local storage (i.e. BookKeeper)
      description: A negative value disables the deletion completely.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: New number of milliseconds to wait before deleting a ledger segment
          which has been offloaded
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: offloadDeletionLagMs value is not valid
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Clear the namespace configured offload deletion lag. The topics in
        the namespace will fallback to using the default configured deletion lag for
        the broker
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/offloadPolicies:
    get:
      tags:
      - namespaces
      summary: Get offload configuration on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffloadPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set offload configuration on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Offload policies for the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffloadPoliciesImpl'
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: OffloadPolicies is empty or driver is not supported or bucket
            is not valid
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/offloadThreshold:
    get:
      tags:
      - namespaces
      summary: "Maximum number of bytes stored on the pulsar cluster for a topic,\
        \ before the broker will start offloading to longterm storage"
      description: A negative value disables automatic offloading
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
    put:
      tags:
      - namespaces
      summary: "Set maximum number of bytes stored on the pulsar cluster for a topic,\
        \ before the broker will start offloading to longterm storage"
      description: '-1 will revert to using the cluster default. A negative value
        disables automatic offloading. '
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Maximum number of bytes stored on the pulsar cluster for a topic
          of the specified namespace
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: offloadThreshold value is not valid
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/offloadThresholdInSeconds:
    get:
      tags:
      - namespaces
      summary: "Maximum number of bytes stored on the pulsar cluster for a topic,\
        \ before the broker will start offloading to longterm storage"
      description: A negative value disables automatic offloading
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
    put:
      tags:
      - namespaces
      summary: "Set maximum number of seconds stored on the pulsar cluster for a topic,\
        \ before the broker will start offloading to longterm storage"
      description: A negative value disables automatic offloading
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: offloadThresholdInSeconds value is not valid
          content: {}
  /namespaces/{tenant}/{namespace}/permissions:
    get:
      tags:
      - namespaces
      summary: Retrieve the permissions for a namespace.
      description: "Returns a nested map structure which Swagger does not fully support\
        \ for display. Structure: Map<String, Set<AuthAction>>. Please refer to this\
        \ structure for details."
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                  enum:
                  - produce
                  - consume
                  - functions
                  - sources
                  - sinks
                  - packages
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "409":
          description: Namespace is not empty
          content: {}
  /namespaces/{tenant}/{namespace}/permissions/subscription:
    get:
      tags:
      - namespaces
      summary: Retrieve the permissions for a subscription.
      description: "Returns a nested map structure which Swagger does not fully support\
        \ for display. Structure: Map<String, Set<String>>. Please refer to this structure\
        \ for details."
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "409":
          description: Namespace is not empty
          content: {}
  /namespaces/{tenant}/{namespace}/permissions/{role}:
    post:
      tags:
      - namespaces
      summary: Grant a new permission to a role on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: role
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: List of permissions for the specified role
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                enum:
                - produce
                - consume
                - functions
                - sources
                - sinks
                - packages
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "501":
          description: Authorization is not enabled
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Revoke all permissions to a role on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: role
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/persistence:
    get:
      tags:
      - namespaces
      summary: Get the persistence configuration for a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistencePolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - namespaces
      summary: Set the persistence configuration for all the topics on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Persistence policies for the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersistencePolicies'
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Invalid persistence policies
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Delete the persistence configuration for all topics on a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
  /namespaces/{tenant}/{namespace}/persistence/bookieAffinity:
    post:
      tags:
      - namespaces
      summary: Set the bookie-affinity-group to namespace-persistent policy.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Bookie affinity group for the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookieAffinityGroupData'
        required: false
      responses:
        "200":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/properties:
    get:
      tags:
      - namespaces
      summary: Get key value pair properties for a given namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
    put:
      tags:
      - namespaces
      summary: Put key value pairs property on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Key value pair properties for the namespace
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Clear properties on a given namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/property/{key}:
    get:
      tags:
      - namespaces
      summary: Get property value for a given key on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
    delete:
      tags:
      - namespaces
      summary: Remove property value for a given key on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/property/{key}/{value}:
    put:
      tags:
      - namespaces
      summary: Put a key value pair property on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/removeOffloadPolicies:
    delete:
      tags:
      - namespaces
      summary: ' Set offload configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: OffloadPolicies is empty or driver is not supported or bucket
            is not valid
          content: {}
  /namespaces/{tenant}/{namespace}/replication:
    get:
      tags:
      - namespaces
      summary: Get the replication clusters for a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Namespace is not global
          content: {}
    post:
      tags:
      - namespaces
      summary: Set the replication clusters for a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: List of replication clusters
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "409":
          description: Peer-cluster can't be part of replication-cluster
          content: {}
        "412":
          description: Namespace is not global or invalid cluster ids
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/replicatorDispatchRate:
    get:
      tags:
      - namespaces
      summary: "Get replicator dispatch-rate configured for the namespace, null means\
        \ replicator dispatch-rate not configured, -1 means msg-dispatch-rate or byte-dispatch-rate\
        \ not configured in dispatch-rate yet"
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRateImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set replicator dispatch-rate throttling for all topics of the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Replicator dispatch rate for all topics of the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove replicator dispatch-rate throttling for all topics of the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
  /namespaces/{tenant}/{namespace}/resourcegroup:
    get:
      tags:
      - namespaces
      summary: Get the resource group attached to the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
    delete:
      tags:
      - namespaces
      summary: Delete resourcegroup for a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Invalid resourcegroup
          content: {}
  /namespaces/{tenant}/{namespace}/resourcegroup/{resourcegroup}:
    post:
      tags:
      - namespaces
      summary: Set resourcegroup for a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: resourcegroup
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Invalid resourcegroup
          content: {}
  /namespaces/{tenant}/{namespace}/retention:
    get:
      tags:
      - namespaces
      summary: Get retention config on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: ' Set retention configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Retention policies for the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionPolicies'
        required: false
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Retention Quota must exceed backlog quota
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: ' Remove retention configuration on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Retention policies for the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionPolicies'
        required: false
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Retention Quota must exceed backlog quota
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/scanOffloadedLedgers:
    get:
      tags:
      - namespaces
      summary: Trigger the scan of offloaded Ledgers on the LedgerOffloader for the
        given namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful get of offloaded ledger data
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/schemaAutoUpdateCompatibilityStrategy:
    get:
      tags:
      - namespaces
      summary: "The strategy used to check the compatibility of new schemas, provided\
        \ by producers, before automatically updating the schema"
      description: "The value AutoUpdateDisabled prevents producers from updating\
        \ the schema.  If set to AutoUpdateDisabled, schemas must be updated through\
        \ the REST api"
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                enum:
                - AutoUpdateDisabled
                - Backward
                - Forward
                - Full
                - AlwaysCompatible
                - BackwardTransitive
                - ForwardTransitive
                - FullTransitive
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    put:
      tags:
      - namespaces
      summary: "Update the strategy used to check the compatibility of new schemas,\
        \ provided by producers, before automatically updating the schema"
      description: "The value AutoUpdateDisabled prevents producers from updating\
        \ the schema.  If set to AutoUpdateDisabled, schemas must be updated through\
        \ the REST api"
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Strategy used to check the compatibility of new schemas
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/schemaCompatibilityStrategy:
    get:
      tags:
      - namespaces
      summary: 'The strategy of the namespace schema compatibility '
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                enum:
                - UNDEFINED
                - ALWAYS_INCOMPATIBLE
                - ALWAYS_COMPATIBLE
                - BACKWARD
                - FORWARD
                - FULL
                - BACKWARD_TRANSITIVE
                - FORWARD_TRANSITIVE
                - FULL_TRANSITIVE
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    put:
      tags:
      - namespaces
      summary: Update the strategy used to check the compatibility of new schema
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Strategy used to check the compatibility of new schema
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/schemaValidationEnforced:
    get:
      tags:
      - namespaces
      summary: Get schema validation enforced flag for namespace.
      description: "If the flag is set to true, when a producer without a schema attempts\
        \ to produce to a topic with schema in this namespace, the producer will be\
        \ failed to connect. PLEASE be carefully on using this, since non-java clients\
        \ don't support schema.if you enable this setting, it will cause non-java\
        \ clients failed to produce."
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenants or Namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set schema validation enforced flag on namespace.
      description: "If the flag is set to true, when a producer without a schema attempts\
        \ to produce to a topic with schema in this namespace, the producer will be\
        \ failed to connect. PLEASE be carefully on using this, since non-java clients\
        \ don't support schema.if you enable this setting, it will cause non-java\
        \ clients failed to produce."
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Flag of whether validation is enforced on the specified namespace
        content:
          application/json:
            schema:
              type: boolean
        required: true
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or Namespace doesn't exist
          content: {}
        "412":
          description: schemaValidationEnforced value is not valid
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/subscribeRate:
    get:
      tags:
      - namespaces
      summary: Get subscribe-rate configured for the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set subscribe-rate throttling for all topics of the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Subscribe rate for all topics of the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeRate'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Delete subscribe-rate throttling for all topics of the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
  /namespaces/{tenant}/{namespace}/subscriptionAuthMode:
    get:
      tags:
      - namespaces
      summary: Get subscription auth mode in a namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                enum:
                - None
                - Prefix
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: ' Set a subscription auth mode for all the topics on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Subscription auth mode for all topics of the specified namespace
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/subscriptionDispatchRate:
    get:
      tags:
      - namespaces
      summary: "Get subscription dispatch-rate configured for the namespace, null\
        \ means subscription dispatch-rate not configured, -1 means msg-dispatch-rate\
        \ or byte-dispatch-rate not configured in dispatch-rate yet"
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set Subscription dispatch-rate throttling for all topics of the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Subscription dispatch rate for all topics of the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Delete Subscription dispatch-rate throttling for all topics of the
        namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
  /namespaces/{tenant}/{namespace}/subscriptionExpirationTime:
    get:
      tags:
      - namespaces
      summary: Get the subscription expiration time for the namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
    post:
      tags:
      - namespaces
      summary: Set subscription expiration time in minutes for namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Expiration time in minutes for the specified namespace
        content:
          application/json:
            schema:
              type: integer
              format: int32
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "412":
          description: Invalid expiration time
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: Remove subscription expiration time for namespace
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/subscriptionTypesEnabled:
    get:
      tags:
      - namespaces
      summary: The set of whether allow subscription types
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
                  enum:
                  - Exclusive
                  - Shared
                  - Failover
                  - Key_Shared
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - namespaces
      summary: Update set of whether allow share sub type
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Set of whether allow subscription types
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                enum:
                - Exclusive
                - Shared
                - Failover
                - Key_Shared
        required: true
      responses:
        "200":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - namespaces
      summary: ' Remove subscription types enabled on a namespace.'
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or Namespace does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /namespaces/{tenant}/{namespace}/topics:
    get:
      tags:
      - namespaces
      summary: Get the list of all the topics under a certain namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: mode
        in: query
        schema:
          type: string
          default: PERSISTENT
          enum:
          - PERSISTENT
          - NON_PERSISTENT
          - ALL
      - name: includeSystemTopic
        in: query
        description: Include system topic
        schema:
          type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/unload:
    put:
      tags:
      - namespaces
      summary: Unload namespace
      description: "Unload an active namespace from the current broker serving it.\
        \ Performing this operation will let the brokerremoves all producers, consumers,\
        \ and connections using this namespace, and close all topics (includingtheir\
        \ persistent store). During that operation, the namespace is marked as tentatively\
        \ unavailable until thebroker completes the unloading action. This operation\
        \ requires strictly super user privileges, since it wouldresult in non-persistent\
        \ message loss and unexpected connection closure to the clients."
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
        "412":
          description: Namespace is already unloaded or Namespace has bundles activated
          content: {}
  /namespaces/{tenant}/{namespace}/unsubscribe/{subscription}:
    post:
      tags:
      - namespaces
      summary: Unsubscribes the given subscription on all topics on a namespace.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: subscription
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespacen
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/{bundle}:
    delete:
      tags:
      - namespaces
      summary: Delete a namespace bundle and all the topics under it.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        required: true
        schema:
          type: string
      - name: force
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace doesn't exist
          content: {}
        "409":
          description: Namespace bundle is not empty
          content: {}
  /namespaces/{tenant}/{namespace}/{bundle}/clearBacklog:
    post:
      tags:
      - namespaces
      summary: Clear backlog for all topics on a namespace bundle.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/{bundle}/clearBacklog/{subscription}:
    post:
      tags:
      - namespaces
      summary: Clear backlog for a given subscription on all topics on a namespace
        bundle.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: subscription
        in: path
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/{bundle}/split:
    put:
      tags:
      - namespaces
      summary: Split a namespace bundle
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      - name: unload
        in: query
        schema:
          type: boolean
          default: false
      - name: splitAlgorithmName
        in: query
        schema:
          type: string
      requestBody:
        description: splitBoundaries
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
      x-codegen-request-body-name: body
  /namespaces/{tenant}/{namespace}/{bundle}/topicHashPositions:
    get:
      tags:
      - namespaces
      summary: Get hash positions for topics
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        required: true
        schema:
          type: string
      - name: topics
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicHashPositions'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /namespaces/{tenant}/{namespace}/{bundle}/unload:
    put:
      tags:
      - namespaces
      summary: Unload a namespace bundle
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      - name: destinationBroker
        in: query
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
  /namespaces/{tenant}/{namespace}/{bundle}/unsubscribe/{subscription}:
    post:
      tags:
      - namespaces
      summary: Unsubscribes the given subscription on all topics on a namespace bundle.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: subscription
        in: path
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
  /non-persistent/{tenant}/{namespace}:
    get:
      tags:
      - non-persistent topic
      summary: Get the list of non-persistent topics under a namespace.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: bundle
        in: query
        description: Specify the bundle name
        schema:
          type: string
      - name: includeSystemTopic
        in: query
        description: Include system topic
        schema:
          type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Don't have permission to manage resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: The tenant/namespace does not exist
          content: {}
        "412":
          description: Namespace name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/partitioned:
    get:
      tags:
      - non-persistent topic
      summary: Get the list of partitioned topics under a namespace.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: includeSystemTopic
        in: query
        description: Include system topic
        schema:
          type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "412":
          description: Namespace name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{bundle}:
    get:
      tags:
      - non-persistent topic
      summary: Get the list of non-persistent topics under a namespace bundle.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        description: Bundle range of a topic
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Don't have permission to manage resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace doesn't exist
          content: {}
        "412":
          description: Namespace name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}:
    put:
      tags:
      - non-persistent topic
      summary: Create a non-partitioned topic.
      description: This is the only REST endpoint from which non-partitioned topics
        could be created.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Key value pair properties for the topic metadata
        content:
          '*/*':
            schema:
              type: object
              additionalProperties:
                type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
        "409":
          description: Partitioned topic already exist
          content: {}
        "412":
          description: "Failed Reason : Name is invalid or Namespace does not have\
            \ any clusters configured"
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Delete a topic.
      description: The topic cannot be deleted if delete is not forcefully and there's
        any active subscription or producer connected to the it. Force delete ignores
        connected clients and deletes topic by explicitly closing them.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: Stop all producer/consumer/replicator and delete topic forcefully
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic has active producers/subscriptions
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/all_subscription/expireMessages/{expireTimeInSeconds}:
    post:
      tags:
      - non-persistent topic
      summary: Expiry messages on all subscriptions of topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: expireTimeInSeconds
        in: path
        description: Expires beyond the specified number of seconds
        required: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Expiry messages on a non-persistent topic is not allowed
          content: {}
        "412":
          description: Can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/autoSubscriptionCreation:
    get:
      tags:
      - non-persistent topic
      summary: Get autoSubscriptionCreation info in a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoSubscriptionCreationOverrideImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic does not exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Override namespace's allowAutoSubscriptionCreation setting for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Settings for automatic subscription creation
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AutoSubscriptionCreationOverrideImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove autoSubscriptionCreation ina a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic does not exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/backlog:
    get:
      tags:
      - non-persistent topic
      summary: Get estimated backlog for offline topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentOfflineTopicStats'
        "404":
          description: Namespace does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/backlogQuota:
    post:
      tags:
      - non-persistent topic
      summary: Set a backlog quota for a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: backlogQuotaType
        in: query
        schema:
          type: string
          enum:
          - destination_storage
          - message_age
      requestBody:
        description: backlog quota policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BacklogQuotaImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Specified backlog quota exceeds retention quota. Increase retention
            quota and retry request
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove a backlog quota policy from a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: backlogQuotaType
        in: query
        schema:
          type: string
          enum:
          - destination_storage
          - message_age
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/backlogQuotaMap:
    get:
      tags:
      - non-persistent topic
      summary: Get backlog quota map on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/BacklogQuota'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic policy or namespace does not exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/backlogSize:
    put:
      tags:
      - non-persistent topic
      summary: Calculate backlog size by a message ID (in bytes).
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/compaction:
    get:
      tags:
      - non-persistent topic
      summary: Get the status of a compaction operation for a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongRunningProcessStatus'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: "Namespace or topic does not exist, or compaction hasn't run"
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
    put:
      tags:
      - non-persistent topic
      summary: Trigger a compaction operation on a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "409":
          description: Compaction already running
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/compactionThreshold:
    get:
      tags:
      - non-persistent topic
      summary: Get compaction threshold configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set compaction threshold configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              type: integer
              format: int64
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove compaction threshold configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/createMissedPartitions:
    post:
      tags:
      - non-persistent topic
      summary: Create missed partitions of an existing partitioned topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant does not exist
          content: {}
        "409":
          description: Partitioned topic does not exist
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/deduplicationEnabled:
    get:
      tags:
      - non-persistent topic
      summary: Get deduplication configuration of a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set deduplication enabled on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: DeduplicationEnabled policies for the specified topic
        content:
          '*/*':
            schema:
              type: boolean
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove deduplication configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/deduplicationSnapshotInterval:
    get:
      tags:
      - non-persistent topic
      summary: Get deduplicationSnapshotInterval config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set deduplicationSnapshotInterval config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Interval to take deduplication snapshot for the specified topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Delete deduplicationSnapshotInterval config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/delayedDelivery:
    get:
      tags:
      - non-persistent topic
      summary: Get delayed delivery messages config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelayedDeliveryPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set delayed delivery messages config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Delayed delivery policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DelayedDeliveryPolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Set delayed delivery messages config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/dispatchRate:
    get:
      tags:
      - non-persistent topic
      summary: Get dispatch rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRateImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set message dispatch rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove message dispatch rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/entryFilters:
    get:
      tags:
      - non-persistent topic
      summary: Get entry filters for a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryFilters'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenants or Namespace doesn't exist
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set entry filters for specified topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Enable sub types for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EntryFilters'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove entry filters for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected thiscall to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/examinemessage:
    get:
      tags:
      - non-persistent topic
      summary: Examine a specific message on a topic by position relative to the earliest
        or the latest message.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: initialPosition
        in: query
        description: Relative start position to examine message.It can be 'latest'
          or 'earliest'
        schema:
          type: string
          default: latest
          enum:
          - latest
          - earliest
      - name: messagePosition
        in: query
        description: The position of messages (default 1)
        schema:
          type: integer
          format: int64
          default: 1
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Successfully retrieved the message. The response is a binary
            byte stream containing the message data. Clients need to parse this binary
            stream based on the message metadata provided in the response headers.
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: "Namespace or topic, the message position does not exist"
          content: {}
        "405":
          description: If given partitioned topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/inactiveTopicPolicies:
    get:
      tags:
      - non-persistent topic
      summary: Get inactive topic policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveTopicPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set inactive topic policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: inactive topic policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InactiveTopicPolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Delete inactive topic policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/internal-info:
    get:
      tags:
      - non-persistent topic
      summary: Get the stored topic metadata.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionedManagedLedgerInfo'
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/internalStats:
    get:
      tags:
      - non-persistent topic
      summary: Get the internal stats for the topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: metadata
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentTopicInternalStats'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to manage resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: The tenant/namespace/topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/lastMessageId:
    get:
      tags:
      - non-persistent topic
      summary: Return the last commit message id of topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageIdAdv'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/ledger/{ledgerId}/entry/{entryId}:
    get:
      tags:
      - non-persistent topic
      summary: Get message by its messageId.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: ledgerId
        in: path
        description: The ledger id
        required: true
        schema:
          type: integer
          format: int64
      - name: entryId
        in: path
        description: The entry id
        required: true
        schema:
          type: integer
          format: int64
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Successfully retrieved the message. The response is a binary
            byte stream containing the message data. Clients need to parse this binary
            stream based on the message metadata provided in the response headers.
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: "Namespace or topic, subscription or the message position does\
            \ not exist"
          content: {}
        "405":
          description: Skipping messages on a non-persistent topic is not allowed
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/maxConsumers:
    get:
      tags:
      - non-persistent topic
      summary: Get maxConsumers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set maxConsumers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: The max consumers of the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of maxConsumers
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove maxConsumers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/maxConsumersPerSubscription:
    get:
      tags:
      - non-persistent topic
      summary: Get max consumers per subscription configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set max consumers per subscription configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove max consumers per subscription configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/maxMessageSize:
    get:
      tags:
      - non-persistent topic
      summary: Get maxMessageSize config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set maxMessageSize config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: The max message size of the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of maxConsumers
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove maxMessageSize config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/maxProducers:
    get:
      tags:
      - non-persistent topic
      summary: Get maxProducers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set maxProducers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: The max producers of the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of maxProducers
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove maxProducers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/maxSubscriptionsPerTopic:
    get:
      tags:
      - non-persistent topic
      summary: Get maxSubscriptionsPerTopic config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set maxSubscriptionsPerTopic config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: The max subscriptions of the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of maxSubscriptionsPerTopic
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove maxSubscriptionsPerTopic config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/maxUnackedMessagesOnConsumer:
    get:
      tags:
      - non-persistent topic
      summary: Get max unacked messages per consumer config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set max unacked messages per consumer config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Max unacked messages on consumer policies for the specified topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Delete max unacked messages per consumer config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/maxUnackedMessagesOnSubscription:
    get:
      tags:
      - non-persistent topic
      summary: Get max unacked messages per subscription config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set max unacked messages per subscription config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Max unacked messages on subscription policies for the specified
          topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Delete max unacked messages per subscription config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/messageTTL:
    get:
      tags:
      - non-persistent topic
      summary: Get message TTL in seconds for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set message TTL in seconds for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: messageTTL
        in: query
        description: TTL in seconds for the specified topic
        required: true
        schema:
          type: integer
          format: int32
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Not authenticate to perform the request or policy is read only
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "412":
          description: Invalid message TTL value
          content: {}
    delete:
      tags:
      - non-persistent topic
      summary: Remove message TTL in seconds for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Not authenticate to perform the request or policy is read only
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "412":
          description: Invalid message TTL value
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/messageid/{timestamp}:
    get:
      tags:
      - non-persistent topic
      summary: Get message ID published at or just after this absolute timestamp (in
        ms).
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: timestamp
        in: path
        description: Specify the timestamp
        required: true
        schema:
          type: integer
          format: int64
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageIdAdv'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Topic is not non-partitioned and persistent
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/offload:
    get:
      tags:
      - non-persistent topic
      summary: Offload a prefix of a topic to long term storage
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffloadProcessStatus'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
    put:
      tags:
      - non-persistent topic
      summary: Offload a prefix of a topic to long term storage
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "400":
          description: Message ID is null
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "409":
          description: Offload already running
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/offloadPolicies:
    get:
      tags:
      - non-persistent topic
      summary: Get offload policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffloadPoliciesImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set offload policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Offload policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OffloadPoliciesImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Delete offload policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/partitioned-internalStats:
    get:
      tags:
      - non-persistent topic
      summary: Get the stats-internal for the partitioned topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionedTopicInternalStats'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/partitioned-stats:
    get:
      tags:
      - non-persistent topic
      summary: Get the stats for the partitioned topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: perPartition
        in: query
        description: Get per partition stats
        schema:
          type: boolean
          default: true
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: getPreciseBacklog
        in: query
        description: If return precise backlog or imprecise backlog
        schema:
          type: boolean
          default: false
      - name: subscriptionBacklogSize
        in: query
        description: "If return backlog size for each subscription, require locking\
          \ on ledger so be careful not to use when there's heavy traffic."
        schema:
          type: boolean
          default: false
      - name: getEarliestTimeInBacklog
        in: query
        description: If return the earliest time in backlog
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonPersistentPartitionedTopicStatsImpl'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/partitions:
    get:
      tags:
      - non-persistent topic
      summary: Get partitioned topic metadata.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: checkAllowAutoCreation
        in: query
        description: Is check configuration required to automatically create topic
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionedTopicMetadata'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to manage resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: The tenant/namespace/topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate cluster configuration
          content: {}
    put:
      tags:
      - non-persistent topic
      summary: Create a partitioned topic.
      description: It needs to be called before creating a producer on a partitioned
        topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: createLocalTopicOnly
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: The number of partitions for the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
              default: 0
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to manage resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: The tenant/namespace does not exist
          content: {}
        "406":
          description: The number of partitions should be more than 0 and less than
            or equal to maxNumPartitionsPerPartitionedTopic
          content: {}
        "409":
          description: Partitioned topic already exists
          content: {}
        "412":
          description: "Failed Reason : Name is invalid or Namespace does not have\
            \ any clusters configured"
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - non-persistent topic
      summary: Increment partitions of an existing partitioned topic.
      description: It increments partitions of existing partitioned-topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: updateLocalTopicOnly
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: force
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: The number of partitions for the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
              default: 0
        required: true
      responses:
        "204":
          description: Update topic partition successful.
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Unauthenticated
          content: {}
        "403":
          description: Forbidden/Unauthorized
          content: {}
        "404":
          description: Topic does not exist
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "422":
          description: The number of partitions should be more than 0 and less than
            or equal to maxNumPartitionsPerPartitionedTopic and number of new partitions
            must be greater than existing number of partitions
          content: {}
        "500":
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Delete a partitioned topic.
      description: It will also delete all the partitions of the topic if it exists.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: Stop all producer/consumer/replicator and delete topic forcefully
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Partitioned topic does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/permissions:
    get:
      tags:
      - non-persistent topic
      summary: Get permissions on a topic.
      description: "Retrieve the effective permissions for a topic. These permissions\
        \ are defined by the permissions set at thenamespace level combined (union)\
        \ with any eventual specific permission set on the topic.Returns a nested\
        \ map structure which Swagger does not fully support for display. Structure:\
        \ Map<String, Set<AuthAction>>. Please refer to this structure for details."
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                  enum:
                  - produce
                  - consume
                  - functions
                  - sources
                  - sinks
                  - packages
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/permissions/{role}:
    post:
      tags:
      - non-persistent topic
      summary: Grant a new permission to a role on a single topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: role
        in: path
        description: Client role to which grant permissions
        required: true
        schema:
          type: string
      requestBody:
        description: "Actions to be granted (produce,functions,consume)"
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
                enum:
                - produce
                - consume
                - functions
                - sources
                - sinks
                - packages
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Revoke permissions on a topic.
      description: "Revoke permissions to a role on a single topic. If the permission\
        \ was not set at the topiclevel, but rather at the namespace level, this operation\
        \ will return an error (HTTP status code 412)."
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: role
        in: path
        description: Client role to which grant permissions
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "412":
          description: Permissions are not set at the topic level
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/persistence:
    get:
      tags:
      - non-persistent topic
      summary: Get configuration of persistence policies for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistencePolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set configuration of persistence policies for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Bookkeeper persistence policies for specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PersistencePolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Invalid persistence policies
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove configuration of persistence policies for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/properties:
    get:
      tags:
      - non-persistent topic
      summary: Get topic properties.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
    put:
      tags:
      - non-persistent topic
      summary: Update the properties on the given topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Key value pair properties for the topic metadata
        content:
          '*/*':
            schema:
              type: object
              additionalProperties:
                type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove the key in properties on the given topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Partitioned topic does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/publishRate:
    get:
      tags:
      - non-persistent topic
      summary: Get publish rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set message publish rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PublishRate'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove message publish rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/replication:
    get:
      tags:
      - non-persistent topic
      summary: Get the replication clusters for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set the replication clusters for a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: List of replication clusters
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Topic is not global or invalid cluster ids
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove the replication clusters from a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: backlogQuotaType
        in: query
        schema:
          type: string
          enum:
          - destination_storage
          - message_age
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/replicatorDispatchRate:
    get:
      tags:
      - non-persistent topic
      summary: Get replicatorDispatchRate config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set replicatorDispatchRate config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Replicator dispatch rate of the topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of replicatorDispatchRate
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove replicatorDispatchRate config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/retention:
    get:
      tags:
      - non-persistent topic
      summary: Get retention configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set retention configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Retention policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RetentionPolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Retention Quota must exceed backlog quota
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove retention configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Retention Quota must exceed backlog quota
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/schemaCompatibilityStrategy:
    get:
      tags:
      - non-persistent topic
      summary: Get schema compatibility strategy on a topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the cluster
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                enum:
                - UNDEFINED
                - ALWAYS_INCOMPATIBLE
                - ALWAYS_COMPATIBLE
                - BACKWARD
                - FORWARD
                - FULL
                - BACKWARD_TRANSITIVE
                - FORWARD_TRANSITIVE
                - FULL_TRANSITIVE
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: Operation not allowed on persistent topic
          content: {}
    put:
      tags:
      - non-persistent topic
      summary: Set schema compatibility strategy on a topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Strategy used to check the compatibility of new schema
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: Operation not allowed on persistent topic
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove schema compatibility strategy on a topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Strategy used to check the compatibility of new schema
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: Operation not allowed on persistent topic
          content: {}
      x-codegen-request-body-name: body
  /non-persistent/{tenant}/{namespace}/{topic}/schemaValidationEnforced:
    get:
      tags:
      - non-persistent topic
      summary: Get schema validation enforced flag for topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenants or Namespace doesn't exist
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set schema validation enforced flag on topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          '*/*':
            schema:
              type: boolean
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or Namespace doesn't exist
          content: {}
        "412":
          description: schemaValidationEnforced value is not valid
          content: {}
      x-codegen-request-body-name: body
  /non-persistent/{tenant}/{namespace}/{topic}/shadowTopics:
    get:
      tags:
      - non-persistent topic
      summary: Get the shadow topic list for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
    put:
      tags:
      - non-persistent topic
      summary: Set shadow topic list for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: List of shadow topics
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Delete shadow topics for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/stats:
    get:
      tags:
      - non-persistent topic
      summary: Get the stats for the topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: getPreciseBacklog
        in: query
        description: If return precise backlog or imprecise backlog
        schema:
          type: boolean
          default: false
      - name: subscriptionBacklogSize
        in: query
        description: "If return backlog size for each subscription, require locking\
          \ on ledger so be careful not to use when there's heavy traffic."
        schema:
          type: boolean
          default: true
      - name: getEarliestTimeInBacklog
        in: query
        description: If return time of the earliest message in backlog
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentTopicStats'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscribeRate:
    get:
      tags:
      - non-persistent topic
      summary: Get subscribe rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set subscribe rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Subscribe rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubscribeRate'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove subscribe rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Subscribe rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubscribeRate'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}:
    delete:
      tags:
      - non-persistent topic
      summary: Delete a subscription.
      description: The subscription cannot be deleted if delete is not forcefully
        and there are any active consumers attached to it. Force delete ignores connected
        consumers and deletes subscription by explicitly closing them.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to be deleted
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: Disconnect and close all consumers and delete subscription forcefully
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "412":
          description: Subscription has active consumers
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/analyzeBacklog:
    post:
      tags:
      - non-persistent topic
      summary: "Analyse a subscription, by scanning all the unprocessed messages"
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: messageId to start the analysis
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResetCursorData'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: position
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/expireMessages:
    post:
      tags:
      - non-persistent topic
      summary: Expiry messages on a topic subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to be Expiry messages on
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: messageId to reset back to (ledgerId:entryId)
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResetCursorData'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Expiry messages on a non-persistent topic is not allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: messageId
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/expireMessages/{expireTimeInSeconds}:
    post:
      tags:
      - non-persistent topic
      summary: Expiry messages on a topic subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to be Expiry messages on
        required: true
        schema:
          type: string
      - name: expireTimeInSeconds
        in: path
        description: Expires beyond the specified number of seconds
        required: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Expiry messages on a non-persistent topic is not allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/position/{messagePosition}:
    get:
      tags:
      - non-persistent topic
      summary: Peek nth message on a topic subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscribed message expired
        required: true
        schema:
          type: string
      - name: messagePosition
        in: path
        description: The number of messages (default 1)
        required: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Successfully retrieved the message. The response is a binary
            byte stream containing the message data. Clients need to parse this binary
            stream based on the message metadata provided in the response headers.
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: "Namespace or topic, subscription or the message position does\
            \ not exist"
          content: {}
        "405":
          description: Skipping messages on a non-persistent topic is not allowed
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/properties:
    get:
      tags:
      - non-persistent topic
      summary: Return all the properties on the given subscription
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
    put:
      tags:
      - non-persistent topic
      summary: Replace all the properties on the given subscription
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to update
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: The new properties
        content:
          '*/*':
            schema:
              type: object
              additionalProperties:
                type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/replicatedSubscriptionStatus:
    get:
      tags:
      - non-persistent topic
      summary: Get replicated subscription status on a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Name of subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
        "401":
          description: Don't have permission to administrate resources
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "412":
          description: Can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Enable or disable a replicated subscription on a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Name of subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Whether to enable replicated subscription
        content:
          '*/*':
            schema:
              type: boolean
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            or subscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic or subscription does not exist
          content: {}
        "405":
          description: Operation not allowed on this topic
          content: {}
        "412":
          description: Can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/resetcursor:
    post:
      tags:
      - non-persistent topic
      summary: Reset subscription to message position closest to given position.
      description: It fence cursor and disconnects all active consumers before resetting
        cursor.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to reset position on
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: messageId to reset back to (ledgerId:entryId)
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResetCursorData'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Not supported for partitioned topics
          content: {}
        "412":
          description: Unable to find position for position specified
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: messageId
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/resetcursor/{timestamp}:
    post:
      tags:
      - non-persistent topic
      summary: Reset subscription to message position closest to absolute timestamp
        (in ms).
      description: It fence cursor and disconnects all active consumers before resetting
        cursor.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to reset position on
        required: true
        schema:
          type: string
      - name: timestamp
        in: path
        description: the timestamp to reset back
        required: true
        schema:
          type: integer
          format: int64
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "412":
          description: Failed to reset cursor on subscription or Unable to find position
            for timestamp specified
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/skip/{numMessages}:
    post:
      tags:
      - non-persistent topic
      summary: Skipping messages on a topic subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Name of subscription
        required: true
        schema:
          type: string
      - name: numMessages
        in: path
        description: The number of messages to skip
        required: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Skipping messages on a partitioned topic is not allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/skip_all:
    post:
      tags:
      - non-persistent topic
      summary: Skip all messages on a topic subscription.
      description: Completely clears the backlog on the subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Name of subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Operation not allowed on non-persistent topic
          content: {}
        "412":
          description: Can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscription/{subscriptionName}:
    put:
      tags:
      - non-persistent topic
      summary: Create a subscription on the topic.
      description: Creates a subscription on the topic at the specified message id
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subscriptionName
        in: path
        description: Subscription to create position on
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: replicated
        in: query
        description: Is replicated required to perform this operation
        schema:
          type: boolean
      requestBody:
        description: "messageId where to create the subscription. It can be 'latest',\
          \ 'earliest' or (ledgerId:entryId)"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResetCursorData'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "400":
          description: Create subscription on non persistent topic is not supported
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Not supported for partitioned topics
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: messageId
  /non-persistent/{tenant}/{namespace}/{topic}/subscriptionDispatchRate:
    get:
      tags:
      - non-persistent topic
      summary: Get subscription message dispatch rate configuration for specified
        topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set subscription message dispatch rate configuration for specified
        topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Subscription message dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove subscription message dispatch rate configuration for specified
        topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscriptionTypesEnabled:
    get:
      tags:
      - non-persistent topic
      summary: Get is enable sub type fors specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - Exclusive
                  - Shared
                  - Failover
                  - Key_Shared
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set is enable sub types for specified topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Enable sub types for the specified topic
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
                enum:
                - Exclusive
                - Shared
                - Failover
                - Key_Shared
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove subscription types enabled for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/subscriptions:
    get:
      tags:
      - non-persistent topic
      summary: Get the list of persistent subscriptions for a given topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/terminate:
    post:
      tags:
      - non-persistent topic
      summary: Terminate a topic. A topic that is terminated will not accept any more
        messages to be published and will let consumer to drain existing messages
        in backlog
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: "Operation terminated successfully. The response includes the\
            \ 'lastMessageId', which is the identifier of the last message processed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageIdAdv'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Termination of a partitioned topic is not allowed
          content: {}
        "406":
          description: Need to provide a persistent topic name
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/terminate/partitions:
    post:
      tags:
      - non-persistent topic
      summary: Terminate all partitioned topic. A topic that is terminated will not
        accept any more messages to be published and will let consumer to drain existing
        messages in backlog
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Termination of a non-partitioned topic is not allowed
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/trim:
    post:
      tags:
      - non-persistent topic
      summary: ' Trim a topic'
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/truncate:
    delete:
      tags:
      - non-persistent topic
      summary: Truncate a topic.
      description: NonPersistentTopic does not support truncate.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "412":
          description: NonPersistentTopic does not support truncate.
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/unload:
    put:
      tags:
      - non-persistent topic
      summary: Unload a topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: This operation requires super-user access
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: The tenant/namespace/topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /non-persistent/{tenant}/{namespace}/{topic}/{subName}/dispatchRate:
    get:
      tags:
      - non-persistent topic
      summary: Get message dispatch rate configuration for specified subscription.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: subName
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - non-persistent topic
      summary: Set message dispatch rate configuration for specified subscription.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: subName
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Subscription message dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - non-persistent topic
      summary: Remove message dispatch rate configuration for specified subscription.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: subName
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}:
    get:
      tags:
      - persistent topic
      summary: Get the list of topics under a namespace.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: bundle
        in: query
        description: Specify the bundle name
        schema:
          type: string
      - name: includeSystemTopic
        in: query
        description: Include system topic
        schema:
          type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "412":
          description: Namespace name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/partitioned:
    get:
      tags:
      - persistent topic
      summary: Get the list of partitioned topics under a namespace.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: includeSystemTopic
        in: query
        description: Include system topic
        schema:
          type: boolean
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin or operate permission on the namespace
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "412":
          description: Namespace name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}:
    put:
      tags:
      - persistent topic
      summary: Create a non-partitioned topic.
      description: This is the only REST endpoint from which non-partitioned topics
        could be created.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Key value pair properties for the topic metadata
        content:
          '*/*':
            schema:
              type: object
              additionalProperties:
                type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
        "409":
          description: Partitioned topic already exist
          content: {}
        "412":
          description: "Failed Reason : Name is invalid or Namespace does not have\
            \ any clusters configured"
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Delete a topic.
      description: The topic cannot be deleted if delete is not forcefully and there's
        any active subscription or producer connected to the it. Force delete ignores
        connected clients and deletes topic by explicitly closing them.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: Stop all producer/consumer/replicator and delete topic forcefully
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic has active producers/subscriptions
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/all_subscription/expireMessages/{expireTimeInSeconds}:
    post:
      tags:
      - persistent topic
      summary: Expiry messages on all subscriptions of topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: expireTimeInSeconds
        in: path
        description: Expires beyond the specified number of seconds
        required: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Expiry messages on a non-persistent topic is not allowed
          content: {}
        "412":
          description: Can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/autoSubscriptionCreation:
    get:
      tags:
      - persistent topic
      summary: Get autoSubscriptionCreation info in a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoSubscriptionCreationOverrideImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic does not exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Override namespace's allowAutoSubscriptionCreation setting for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Settings for automatic subscription creation
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AutoSubscriptionCreationOverrideImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove autoSubscriptionCreation ina a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic does not exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/backlog:
    get:
      tags:
      - persistent topic
      summary: Get estimated backlog for offline topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentOfflineTopicStats'
        "404":
          description: Namespace does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/backlogQuota:
    post:
      tags:
      - persistent topic
      summary: Set a backlog quota for a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: backlogQuotaType
        in: query
        schema:
          type: string
          enum:
          - destination_storage
          - message_age
      requestBody:
        description: backlog quota policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BacklogQuotaImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Specified backlog quota exceeds retention quota. Increase retention
            quota and retry request
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove a backlog quota policy from a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: backlogQuotaType
        in: query
        schema:
          type: string
          enum:
          - destination_storage
          - message_age
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/backlogQuotaMap:
    get:
      tags:
      - persistent topic
      summary: Get backlog quota map on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/BacklogQuota'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic policy or namespace does not exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/backlogSize:
    put:
      tags:
      - persistent topic
      summary: Calculate backlog size by a message ID (in bytes).
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/compaction:
    get:
      tags:
      - persistent topic
      summary: Get the status of a compaction operation for a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongRunningProcessStatus'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: "Namespace or topic does not exist, or compaction hasn't run"
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
    put:
      tags:
      - persistent topic
      summary: Trigger a compaction operation on a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "409":
          description: Compaction already running
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/compactionThreshold:
    get:
      tags:
      - persistent topic
      summary: Get compaction threshold configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int64
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set compaction threshold configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              type: integer
              format: int64
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove compaction threshold configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/createMissedPartitions:
    post:
      tags:
      - persistent topic
      summary: Create missed partitions of an existing partitioned topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant does not exist
          content: {}
        "409":
          description: Partitioned topic does not exist
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/deduplicationEnabled:
    get:
      tags:
      - persistent topic
      summary: Get deduplication configuration of a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set deduplication enabled on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: DeduplicationEnabled policies for the specified topic
        content:
          '*/*':
            schema:
              type: boolean
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove deduplication configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/deduplicationSnapshotInterval:
    get:
      tags:
      - persistent topic
      summary: Get deduplicationSnapshotInterval config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set deduplicationSnapshotInterval config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Interval to take deduplication snapshot for the specified topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Delete deduplicationSnapshotInterval config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/delayedDelivery:
    get:
      tags:
      - persistent topic
      summary: Get delayed delivery messages config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelayedDeliveryPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set delayed delivery messages config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Delayed delivery policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DelayedDeliveryPolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Set delayed delivery messages config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/dispatchRate:
    get:
      tags:
      - persistent topic
      summary: Get dispatch rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRateImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set message dispatch rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove message dispatch rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/entryFilters:
    get:
      tags:
      - persistent topic
      summary: Get entry filters for a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryFilters'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenants or Namespace doesn't exist
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set entry filters for specified topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected thiscall to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Entry filters for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EntryFilters'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove entry filters for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected thiscall to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/examinemessage:
    get:
      tags:
      - persistent topic
      summary: Examine a specific message on a topic by position relative to the earliest
        or the latest message.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: initialPosition
        in: query
        description: Relative start position to examine message.It can be 'latest'
          or 'earliest'
        schema:
          type: string
          default: latest
          enum:
          - latest
          - earliest
      - name: messagePosition
        in: query
        description: The position of messages (default 1)
        schema:
          type: integer
          format: int64
          default: 1
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Successfully retrieved the message. The response is a binary
            byte stream containing the message data. Clients need to parse this binary
            stream based on the message metadata provided in the response headers.
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: "Namespace or topic, the message position does not exist"
          content: {}
        "405":
          description: If given partitioned topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/inactiveTopicPolicies:
    get:
      tags:
      - persistent topic
      summary: Get inactive topic policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InactiveTopicPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set inactive topic policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: inactive topic policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InactiveTopicPolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Delete inactive topic policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/internal-info:
    get:
      tags:
      - persistent topic
      summary: Get the stored topic metadata.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionedManagedLedgerInfo'
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/internalStats:
    get:
      tags:
      - persistent topic
      summary: Get the internal stats for the topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: metadata
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentTopicInternalStats'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/lastMessageId:
    get:
      tags:
      - persistent topic
      summary: Return the last commit message id of topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageIdAdv'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/ledger/{ledgerId}/entry/{entryId}:
    get:
      tags:
      - persistent topic
      summary: Get message by its messageId.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: ledgerId
        in: path
        description: The ledger id
        required: true
        schema:
          type: integer
          format: int64
      - name: entryId
        in: path
        description: The entry id
        required: true
        schema:
          type: integer
          format: int64
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Successfully retrieved the message. The response is a binary
            byte stream containing the message data. Clients need to parse this binary
            stream based on the message metadata provided in the response headers.
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: "Namespace or topic, subscription or the message position does\
            \ not exist"
          content: {}
        "405":
          description: Skipping messages on a non-persistent topic is not allowed
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/maxConsumers:
    get:
      tags:
      - persistent topic
      summary: Get maxConsumers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set maxConsumers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: The max consumers of the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of maxConsumers
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove maxConsumers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/maxConsumersPerSubscription:
    get:
      tags:
      - persistent topic
      summary: Get max consumers per subscription configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set max consumers per subscription configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove max consumers per subscription configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/maxMessageSize:
    get:
      tags:
      - persistent topic
      summary: Get maxMessageSize config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set maxMessageSize config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: The max message size of the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of maxConsumers
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove maxMessageSize config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/maxProducers:
    get:
      tags:
      - persistent topic
      summary: Get maxProducers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set maxProducers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: The max producers of the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of maxProducers
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove maxProducers config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/maxSubscriptionsPerTopic:
    get:
      tags:
      - persistent topic
      summary: Get maxSubscriptionsPerTopic config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set maxSubscriptionsPerTopic config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: The max subscriptions of the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of maxSubscriptionsPerTopic
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove maxSubscriptionsPerTopic config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/maxUnackedMessagesOnConsumer:
    get:
      tags:
      - persistent topic
      summary: Get max unacked messages per consumer config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set max unacked messages per consumer config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Max unacked messages on consumer policies for the specified topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Delete max unacked messages per consumer config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/maxUnackedMessagesOnSubscription:
    get:
      tags:
      - persistent topic
      summary: Get max unacked messages per subscription config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set max unacked messages per subscription config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Max unacked messages on subscription policies for the specified
          topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Delete max unacked messages per subscription config on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/messageTTL:
    get:
      tags:
      - persistent topic
      summary: Get message TTL in seconds for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set message TTL in seconds for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: messageTTL
        in: query
        description: TTL in seconds for the specified topic
        required: true
        schema:
          type: integer
          format: int32
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Not authenticate to perform the request or policy is read only
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "412":
          description: Invalid message TTL value
          content: {}
    delete:
      tags:
      - persistent topic
      summary: Remove message TTL in seconds for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Not authenticate to perform the request or policy is read only
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "412":
          description: Invalid message TTL value
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/messageid/{timestamp}:
    get:
      tags:
      - persistent topic
      summary: Get message ID published at or just after this absolute timestamp (in
        ms).
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: timestamp
        in: path
        description: Specify the timestamp
        required: true
        schema:
          type: integer
          format: int64
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageIdAdv'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Topic is not non-partitioned and persistent
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/offload:
    get:
      tags:
      - persistent topic
      summary: Offload a prefix of a topic to long term storage
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffloadProcessStatus'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
    put:
      tags:
      - persistent topic
      summary: Offload a prefix of a topic to long term storage
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "400":
          description: Message ID is null
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "409":
          description: Offload already running
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/offloadPolicies:
    get:
      tags:
      - persistent topic
      summary: Get offload policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffloadPoliciesImpl'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set offload policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Offload policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OffloadPoliciesImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Delete offload policies on a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or cluster or namespace or topic doesn't exist
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/partitioned-internalStats:
    get:
      tags:
      - persistent topic
      summary: Get the stats-internal for the partitioned topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionedTopicInternalStats'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/partitioned-stats:
    get:
      tags:
      - persistent topic
      summary: Get the stats for the partitioned topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: perPartition
        in: query
        description: Get per partition stats
        schema:
          type: boolean
          default: true
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: getPreciseBacklog
        in: query
        description: If return precise backlog or imprecise backlog
        schema:
          type: boolean
          default: false
      - name: subscriptionBacklogSize
        in: query
        description: "If return backlog size for each subscription, require locking\
          \ on ledger so be careful not to use when there's heavy traffic."
        schema:
          type: boolean
          default: true
      - name: getEarliestTimeInBacklog
        in: query
        description: If return the earliest time in backlog
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionedTopicStatsImpl'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/partitions:
    get:
      tags:
      - persistent topic
      summary: Get partitioned topic metadata.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: checkAllowAutoCreation
        in: query
        description: Is check configuration required to automatically create topic
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionedTopicMetadata'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Partitioned topic does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
    put:
      tags:
      - persistent topic
      summary: Create a partitioned topic.
      description: It needs to be called before creating a producer on a partitioned
        topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: createLocalTopicOnly
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: The number of partitions for the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
              default: 0
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or namespace doesn't exist
          content: {}
        "406":
          description: The number of partitions should be more than 0 and less than
            or equal to maxNumPartitionsPerPartitionedTopic
          content: {}
        "409":
          description: Partitioned topic already exist
          content: {}
        "412":
          description: "Failed Reason : Name is invalid or Namespace does not have\
            \ any clusters configured"
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - persistent topic
      summary: Increment partitions of an existing partitioned topic.
      description: It increments partitions of existing partitioned-topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: updateLocalTopicOnly
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: force
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: The number of partitions for the topic
        content:
          '*/*':
            schema:
              type: integer
              format: int32
              default: 0
        required: true
      responses:
        "204":
          description: Update topic partition successful.
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Unauthenticated
          content: {}
        "403":
          description: Forbidden/Unauthorized
          content: {}
        "404":
          description: Topic does not exist
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "422":
          description: The number of partitions should be more than 0 and less than
            or equal to maxNumPartitionsPerPartitionedTopic and number of new partitions
            must be greater than existing number of partitions
          content: {}
        "500":
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Delete a partitioned topic.
      description: It will also delete all the partitions of the topic if it exists.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: Stop all producer/consumer/replicator and delete topic forcefully
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Partitioned topic does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/permissions:
    get:
      tags:
      - persistent topic
      summary: Get permissions on a topic.
      description: "Retrieve the effective permissions for a topic. These permissions\
        \ are defined by the permissions set at thenamespace level combined (union)\
        \ with any eventual specific permission set on the topic.Returns a nested\
        \ map structure which Swagger does not fully support for display. Structure:\
        \ Map<String, Set<AuthAction>>. Please refer to this structure for details."
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                  enum:
                  - produce
                  - consume
                  - functions
                  - sources
                  - sinks
                  - packages
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/permissions/{role}:
    post:
      tags:
      - persistent topic
      summary: Grant a new permission to a role on a single topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: role
        in: path
        description: Client role to which grant permissions
        required: true
        schema:
          type: string
      requestBody:
        description: "Actions to be granted (produce,functions,consume)"
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
                enum:
                - produce
                - consume
                - functions
                - sources
                - sinks
                - packages
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Revoke permissions on a topic.
      description: "Revoke permissions to a role on a single topic. If the permission\
        \ was not set at the topiclevel, but rather at the namespace level, this operation\
        \ will return an error (HTTP status code 412)."
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: role
        in: path
        description: Client role to which grant permissions
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: tenant/namespace/topic doesn't exit
          content: {}
        "412":
          description: Permissions are not set at the topic level
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/persistence:
    get:
      tags:
      - persistent topic
      summary: Get configuration of persistence policies for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistencePolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set configuration of persistence policies for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Bookkeeper persistence policies for specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PersistencePolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Invalid persistence policies
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove configuration of persistence policies for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/properties:
    get:
      tags:
      - persistent topic
      summary: Get topic properties.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
    put:
      tags:
      - persistent topic
      summary: Update the properties on the given topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Key value pair properties for the topic metadata
        content:
          '*/*':
            schema:
              type: object
              additionalProperties:
                type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove the key in properties on the given topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Partitioned topic does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Partitioned topic name is invalid
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/publishRate:
    get:
      tags:
      - persistent topic
      summary: Get publish rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set message publish rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PublishRate'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove message publish rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/replication:
    get:
      tags:
      - persistent topic
      summary: Get the replication clusters for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set the replication clusters for a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: List of replication clusters
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Topic is not global or invalid cluster ids
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove the replication clusters from a topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: backlogQuotaType
        in: query
        schema:
          type: string
          enum:
          - destination_storage
          - message_age
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/replicatorDispatchRate:
    get:
      tags:
      - persistent topic
      summary: Get replicatorDispatchRate config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set replicatorDispatchRate config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Replicator dispatch rate of the topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Invalid value of replicatorDispatchRate
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove replicatorDispatchRate config for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/retention:
    get:
      tags:
      - persistent topic
      summary: Get retention configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicies'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set retention configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Retention policies for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RetentionPolicies'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Retention Quota must exceed backlog quota
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove retention configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Retention Quota must exceed backlog quota
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/schemaCompatibilityStrategy:
    get:
      tags:
      - persistent topic
      summary: Get schema compatibility strategy on a topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the cluster
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                enum:
                - UNDEFINED
                - ALWAYS_INCOMPATIBLE
                - ALWAYS_COMPATIBLE
                - BACKWARD
                - FORWARD
                - FULL
                - BACKWARD_TRANSITIVE
                - FORWARD_TRANSITIVE
                - FULL_TRANSITIVE
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: Operation not allowed on persistent topic
          content: {}
    put:
      tags:
      - persistent topic
      summary: Set schema compatibility strategy on a topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Strategy used to check the compatibility of new schema
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: Operation not allowed on persistent topic
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove schema compatibility strategy on a topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Strategy used to check the compatibility of new schema
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: Operation not allowed on persistent topic
          content: {}
      x-codegen-request-body-name: body
  /persistent/{tenant}/{namespace}/{topic}/schemaValidationEnforced:
    get:
      tags:
      - persistent topic
      summary: Get schema validation enforced flag for topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: boolean
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenants or Namespace doesn't exist
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set schema validation enforced flag on topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          '*/*':
            schema:
              type: boolean
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Tenant or Namespace doesn't exist
          content: {}
        "412":
          description: schemaValidationEnforced value is not valid
          content: {}
      x-codegen-request-body-name: body
  /persistent/{tenant}/{namespace}/{topic}/shadowTopics:
    get:
      tags:
      - persistent topic
      summary: Get the shadow topic list for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
    put:
      tags:
      - persistent topic
      summary: Set shadow topic list for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: List of shadow topics
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Delete shadow topics for a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, enable the topic level policy\
            \ and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/stats:
    get:
      tags:
      - persistent topic
      summary: Get the stats for the topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: getPreciseBacklog
        in: query
        description: If return precise backlog or imprecise backlog
        schema:
          type: boolean
          default: false
      - name: subscriptionBacklogSize
        in: query
        description: "If return backlog size for each subscription, require locking\
          \ on ledger so be careful not to use when there's heavy traffic."
        schema:
          type: boolean
          default: true
      - name: getEarliestTimeInBacklog
        in: query
        description: If return time of the earliest message in backlog
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentTopicStats'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscribeRate:
    get:
      tags:
      - persistent topic
      summary: Get subscribe rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set subscribe rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Subscribe rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubscribeRate'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove subscribe rate configuration for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Subscribe rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubscribeRate'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}:
    delete:
      tags:
      - persistent topic
      summary: Delete a subscription.
      description: The subscription cannot be deleted if delete is not forcefully
        and there are any active consumers attached to it. Force delete ignores connected
        consumers and deletes subscription by explicitly closing them.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to be deleted
        required: true
        schema:
          type: string
      - name: force
        in: query
        description: Disconnect and close all consumers and delete subscription forcefully
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "412":
          description: Subscription has active consumers
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/analyzeBacklog:
    post:
      tags:
      - persistent topic
      summary: "Analyse a subscription, by scanning all the unprocessed messages"
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: messageId to start the analysis
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResetCursorData'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: position
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/expireMessages:
    post:
      tags:
      - persistent topic
      summary: Expiry messages on a topic subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to be Expiry messages on
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: messageId to reset back to (ledgerId:entryId)
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResetCursorData'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Expiry messages on a non-persistent topic is not allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: messageId
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/expireMessages/{expireTimeInSeconds}:
    post:
      tags:
      - persistent topic
      summary: Expiry messages on a topic subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to be Expiry messages on
        required: true
        schema:
          type: string
      - name: expireTimeInSeconds
        in: path
        description: Expires beyond the specified number of seconds
        required: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Expiry messages on a non-persistent topic is not allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/position/{messagePosition}:
    get:
      tags:
      - persistent topic
      summary: Peek nth message on a topic subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscribed message expired
        required: true
        schema:
          type: string
      - name: messagePosition
        in: path
        description: The number of messages (default 1)
        required: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Successfully retrieved the message. The response is a binary
            byte stream containing the message data. Clients need to parse this binary
            stream based on the message metadata provided in the response headers.
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: "Namespace or topic, subscription or the message position does\
            \ not exist"
          content: {}
        "405":
          description: Skipping messages on a non-persistent topic is not allowed
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/properties:
    get:
      tags:
      - persistent topic
      summary: Return all the properties on the given subscription
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
    put:
      tags:
      - persistent topic
      summary: Replace all the properties on the given subscription
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to update
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: The new properties
        content:
          '*/*':
            schema:
              type: object
              additionalProperties:
                type: string
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/replicatedSubscriptionStatus:
    get:
      tags:
      - persistent topic
      summary: Get replicated subscription status on a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Name of subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
        "401":
          description: Don't have permission to administrate resources
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "412":
          description: Can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
    post:
      tags:
      - persistent topic
      summary: Enable or disable a replicated subscription on a topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Name of subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Whether to enable replicated subscription
        content:
          '*/*':
            schema:
              type: boolean
        required: true
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            or subscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Topic or subscription does not exist
          content: {}
        "405":
          description: Operation not allowed on this topic
          content: {}
        "412":
          description: Can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: body
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/resetcursor:
    post:
      tags:
      - persistent topic
      summary: Reset subscription to message position closest to given position.
      description: It fence cursor and disconnects all active consumers before resetting
        cursor.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to reset position on
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: messageId to reset back to (ledgerId:entryId)
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResetCursorData'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Not supported for partitioned topics
          content: {}
        "412":
          description: Unable to find position for position specified
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: messageId
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/resetcursor/{timestamp}:
    post:
      tags:
      - persistent topic
      summary: Reset subscription to message position closest to absolute timestamp
        (in ms).
      description: It fence cursor and disconnects all active consumers before resetting
        cursor.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Subscription to reset position on
        required: true
        schema:
          type: string
      - name: timestamp
        in: path
        description: the timestamp to reset back
        required: true
        schema:
          type: integer
          format: int64
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Method Not Allowed
          content: {}
        "412":
          description: Failed to reset cursor on subscription or Unable to find position
            for timestamp specified
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/skip/{numMessages}:
    post:
      tags:
      - persistent topic
      summary: Skipping messages on a topic subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Name of subscription
        required: true
        schema:
          type: string
      - name: numMessages
        in: path
        description: The number of messages to skip
        required: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Skipping messages on a partitioned topic is not allowed
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/skip_all:
    post:
      tags:
      - persistent topic
      summary: Skip all messages on a topic subscription.
      description: Completely clears the backlog on the subscription.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subName
        in: path
        description: Name of subscription
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Operation not allowed on non-persistent topic
          content: {}
        "412":
          description: Can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscription/{subscriptionName}:
    put:
      tags:
      - persistent topic
      summary: Create a subscription on the topic.
      description: Creates a subscription on the topic at the specified message id
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: subscriptionName
        in: path
        description: Subscription to create position on
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: replicated
        in: query
        description: Is replicated required to perform this operation
        schema:
          type: boolean
      requestBody:
        description: "messageId where to create the subscription. It can be 'latest',\
          \ 'earliest' or (ledgerId:entryId)"
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ResetCursorData'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "400":
          description: Create subscription on non persistent topic is not supported
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic or subscription does not exist
          content: {}
        "405":
          description: Not supported for partitioned topics
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
      x-codegen-request-body-name: messageId
  /persistent/{tenant}/{namespace}/{topic}/subscriptionDispatchRate:
    get:
      tags:
      - persistent topic
      summary: Get subscription message dispatch rate configuration for specified
        topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set subscription message dispatch rate configuration for specified
        topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Subscription message dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove subscription message dispatch rate configuration for specified
        topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscriptionTypesEnabled:
    get:
      tags:
      - persistent topic
      summary: Get is enable sub type fors specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                  - Exclusive
                  - Shared
                  - Failover
                  - Key_Shared
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set is enable sub types for specified topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      requestBody:
        description: Enable sub types for the specified topic
        content:
          '*/*':
            schema:
              type: array
              items:
                type: string
                enum:
                - Exclusive
                - Shared
                - Failover
                - Key_Shared
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove subscription types enabled for specified topic.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, to enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/subscriptions:
    get:
      tags:
      - persistent topic
      summary: Get the list of persistent subscriptions for a given topic.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/terminate:
    post:
      tags:
      - persistent topic
      summary: Terminate a topic. A topic that is terminated will not accept any more
        messages to be published and will let consumer to drain existing messages
        in backlog
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: "Operation terminated successfully. The response includes the\
            \ 'lastMessageId', which is the identifier of the last message processed."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageIdAdv'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Termination of a partitioned topic is not allowed
          content: {}
        "406":
          description: Need to provide a persistent topic name
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/terminate/partitions:
    post:
      tags:
      - persistent topic
      summary: Terminate all partitioned topic. A topic that is terminated will not
        accept any more messages to be published and will let consumer to drain existing
        messages in backlog
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Termination of a non-partitioned topic is not allowed
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/trim:
    post:
      tags:
      - persistent topic
      summary: ' Trim a topic'
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
            orsubscriber is not authorized to access this operation
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "405":
          description: Operation is not allowed on the persistent topic
          content: {}
        "412":
          description: Topic name is not valid
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/truncate:
    delete:
      tags:
      - persistent topic
      summary: Truncate a topic.
      description: The truncate operation will move all cursors to the end of the
        topic and delete all inactive ledgers.
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "500":
          description: Internal server error
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/unload:
    put:
      tags:
      - persistent topic
      summary: Unload a topic
      parameters:
      - name: tenant
        in: path
        description: Specify the tenant
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Specify the namespace
        required: true
        schema:
          type: string
      - name: topic
        in: path
        description: Specify topic name
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "401":
          description: Don't have permission to administrate resources on this tenant
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic does not exist
          content: {}
        "409":
          description: Concurrent modification
          content: {}
        "412":
          description: Topic name is not valid or can't find owner for topic
          content: {}
        "500":
          description: Internal server error
          content: {}
        "503":
          description: Failed to validate global cluster configuration
          content: {}
  /persistent/{tenant}/{namespace}/{topic}/{subName}/dispatchRate:
    get:
      tags:
      - persistent topic
      summary: Get message dispatch rate configuration for specified subscription.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: subName
        in: path
        required: true
        schema:
          type: string
      - name: applied
        in: query
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchRate'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
    post:
      tags:
      - persistent topic
      summary: Set message dispatch rate configuration for specified subscription.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: subName
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: Subscription message dispatch rate for the specified topic
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DispatchRateImpl'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - persistent topic
      summary: Remove message dispatch rate configuration for specified subscription.
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: subName
        in: path
        required: true
        schema:
          type: string
      - name: isGlobal
        in: query
        schema:
          type: boolean
          default: false
      - name: authoritative
        in: query
        description: Whether leader broker redirected this call to this broker. For
          internal use.
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace or topic doesn't exist
          content: {}
        "405":
          description: "Topic level policy is disabled, please enable the topic level\
            \ policy and retry"
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /resource-quotas:
    get:
      tags:
      - resource-quotas
      summary: Get the default quota
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
    post:
      tags:
      - resource-quotas
      summary: Set the default quota
      requestBody:
        description: Default resource quota
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceQuota'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
      x-codegen-request-body-name: body
  /resource-quotas/{tenant}/{namespace}/{bundle}:
    get:
      tags:
      - resource-quotas
      summary: Get resource quota of a namespace bundle.
      parameters:
      - name: tenant
        in: path
        description: Tenant name
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Namespace name within the specified tenant
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        description: Namespace bundle range
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceQuota'
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: Namespace does not exist
          content: {}
    post:
      tags:
      - resource-quotas
      summary: Set resource quota on a namespace.
      parameters:
      - name: tenant
        in: path
        description: Tenant name
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Namespace name within the specified tenant
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        description: Namespace bundle range
        required: true
        schema:
          type: string
      requestBody:
        description: Resource quota for the specified namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceQuota'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "409":
          description: Concurrent modification
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - resource-quotas
      summary: Remove resource quota for a namespace.
      parameters:
      - name: tenant
        in: path
        description: Tenant name
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        description: Namespace name within the specified tenant
        required: true
        schema:
          type: string
      - name: bundle
        in: path
        description: Namespace bundle range
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "307":
          description: Current broker doesn't serve the namespace
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "409":
          description: Concurrent modification
          content: {}
  /resourcegroups:
    get:
      tags:
      - resourcegroups
      summary: Get the list of all the resourcegroups.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: string
        "403":
          description: Don't have admin permission
          content: {}
  /resourcegroups/{resourcegroup}:
    get:
      tags:
      - resourcegroups
      summary: Get the rate limiters specified for a resourcegroup.
      parameters:
      - name: resourcegroup
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: ResourceGroup doesn't exist
          content: {}
    put:
      tags:
      - resourcegroups
      summary: Creates a new resourcegroup with the specified rate limiters
      parameters:
      - name: resourcegroup
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Rate limiters for the resourcegroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroup'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: cluster doesn't exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - resourcegroups
      summary: Delete a resourcegroup.
      parameters:
      - name: resourcegroup
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: Don't have admin permission
          content: {}
        "404":
          description: ResourceGroup doesn't exist
          content: {}
        "409":
          description: ResourceGroup is in use
          content: {}
  /schemas/{tenant}/{namespace}/{topic}/compatibility:
    post:
      tags:
      - schemas
      summary: test the schema compatibility
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: A JSON value presenting a schema payload. An example of the expected
          schema can be found down here.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSchemaPayload'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsCompatibilityResponse'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Client is not authorized or Don't have admin permission
          content: {}
        "403":
          description: Client is not authenticated
          content: {}
        "404":
          description: Tenant or Namespace or Topic doesn't exist
          content: {}
        "412":
          description: Failed to find the ownership for the topic
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /schemas/{tenant}/{namespace}/{topic}/schema:
    get:
      tags:
      - schemas
      summary: Get the schema of a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaResponse'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Client is not authorized or Don't have admin permission
          content: {}
        "403":
          description: Client is not authenticated
          content: {}
        "404":
          description: Tenant or Namespace or Topic doesn't exist; or Schema is not
            found for this topic
          content: {}
        "412":
          description: Failed to find the ownership for the topic
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    post:
      tags:
      - schemas
      summary: Update the schema of a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: A JSON value presenting a schema payload. An example of the expected
          schema can be found down here.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSchemaPayload'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSchemaResponse'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Client is not authorized or Don't have admin permission
          content: {}
        "403":
          description: Client is not authenticated
          content: {}
        "404":
          description: Tenant or Namespace or Topic doesn't exist
          content: {}
        "409":
          description: Incompatible schema
          content: {}
        "412":
          description: Failed to find the ownership for the topic
          content: {}
        "422":
          description: Invalid schema data
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - schemas
      summary: Delete all versions schema of a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      - name: force
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSchemaResponse'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Client is not authorized or Don't have admin permission
          content: {}
        "403":
          description: Client is not authenticated
          content: {}
        "404":
          description: Tenant or Namespace or Topic doesn't exist
          content: {}
        "412":
          description: Failed to find the ownership for the topic
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /schemas/{tenant}/{namespace}/{topic}/schema/{version}:
    get:
      tags:
      - schemas
      summary: Get the schema of a topic at a given version
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaResponse'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Client is not authorized or Don't have admin permission
          content: {}
        "403":
          description: Client is not authenticated
          content: {}
        "404":
          description: Tenant or Namespace or Topic doesn't exist; or Schema is not
            found for this topic
          content: {}
        "412":
          description: Failed to find the ownership for the topic
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /schemas/{tenant}/{namespace}/{topic}/schemas:
    get:
      tags:
      - schemas
      summary: Get the all schemas of a topic
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllVersionsSchemaResponse'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Client is not authorized or Don't have admin permission
          content: {}
        "403":
          description: Client is not authenticated
          content: {}
        "404":
          description: Tenant or Namespace or Topic doesn't exist; or Schema is not
            found for this topic
          content: {}
        "412":
          description: Failed to find the ownership for the topic
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /schemas/{tenant}/{namespace}/{topic}/version:
    post:
      tags:
      - schemas
      summary: get the version of the schema
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: path
        required: true
        schema:
          type: string
      - name: topic
        in: path
        required: true
        schema:
          type: string
      - name: authoritative
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        description: A JSON value presenting a schema payload. An example of the expected
          schema can be found down here.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSchemaPayload'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongSchemaVersion'
        "307":
          description: Current broker doesn't serve the namespace of this topic
          content: {}
        "401":
          description: Client is not authorized or Don't have admin permission
          content: {}
        "403":
          description: Client is not authenticated
          content: {}
        "404":
          description: Tenant or Namespace or Topic doesn't exist
          content: {}
        "412":
          description: Failed to find the ownership for the topic
          content: {}
        "422":
          description: Invalid schema data
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /tenants:
    get:
      tags:
      - tenants
      summary: Get the list of existing tenants.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "404":
          description: Tenant doesn't exist
          content: {}
  /tenants/{tenant}:
    get:
      tags:
      - tenants
      summary: Get the admin configuration for a given tenant.
      parameters:
      - name: tenant
        in: path
        description: The tenant name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantInfo'
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "404":
          description: Tenant does not exist
          content: {}
    put:
      tags:
      - tenants
      summary: Create a new tenant.
      description: This operation requires Pulsar super-user privileges.
      parameters:
      - name: tenant
        in: path
        description: The tenant name
        required: true
        schema:
          type: string
      requestBody:
        description: TenantInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantInfo'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "409":
          description: Tenant already exists
          content: {}
        "412":
          description: Clusters do not exist
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - tenants
      summary: Update the admins for a tenant.
      description: This operation requires Pulsar super-user privileges.
      parameters:
      - name: tenant
        in: path
        description: The tenant name
        required: true
        schema:
          type: string
      requestBody:
        description: TenantInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantInfo'
        required: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "404":
          description: Tenant does not exist
          content: {}
        "409":
          description: Tenant already exists
          content: {}
        "412":
          description: Clusters do not exist
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - tenants
      summary: Delete a tenant and all namespaces and topics under it.
      parameters:
      - name: tenant
        in: path
        description: The tenant name
        required: true
        schema:
          type: string
      - name: force
        in: query
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: Operation successful
          content: {}
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "404":
          description: Tenant does not exist
          content: {}
        "405":
          description: Broker doesn't allow forced deletion of tenants
          content: {}
        "409":
          description: The tenant still has active namespaces
          content: {}
  /worker-stats/functionsmetrics:
    get:
      summary: Get metrics for all functions owned by worker
      description: Requested should be executed by Monitoring agent on each worker
        to fetch the metrics
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkerFunctionInstanceStats'
        "401":
          description: Don't have admin permission
          content: {}
        "503":
          description: Worker service is not running
          content: {}
  /worker-stats/metrics:
    get:
      summary: Gets the metrics for Monitoring
      description: Request should be executed by Monitoring agent on each worker to
        fetch the worker-metrics
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metrics'
        "401":
          description: Don't have admin permission
          content: {}
        "503":
          description: Worker service is not running
          content: {}
  /worker/assignments:
    get:
      summary: Fetches information about which Pulsar Functions are assigned to which
        Pulsar clusters
      description: "Returns a nested map structure which Swagger does not fully support\
        \ for display.Structure: Map<String, Set<String>>. Please refer to this structure\
        \ for details."
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "503":
          description: Worker service is not running
          content: {}
  /worker/cluster:
    get:
      summary: Fetches information about the Pulsar cluster running Pulsar Functions
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkerInfo'
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "503":
          description: Worker service is not running
          content: {}
  /worker/cluster/leader:
    get:
      summary: Fetches info about the leader node of the Pulsar cluster running Pulsar
        Functions
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerInfo'
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "503":
          description: Worker service is not running
          content: {}
  /worker/cluster/leader/ready:
    get:
      summary: Checks if this node is the leader and is ready to service requests
      responses:
        "200":
          description: successful operation
          content:
            '*/*':
              schema:
                type: boolean
        "503":
          description: Worker service is not running
          content: {}
  /worker/connectors:
    get:
      summary: Fetches a list of supported Pulsar IO connectors currently running
        in cluster mode
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorDefinition'
        "400":
          description: Invalid request
          content: {}
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "408":
          description: Request timeout
          content: {}
  /worker/drain:
    get:
      summary: Get the status of any ongoing drain operation at this worker
      responses:
        "200":
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LongRunningProcessStatus'
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "503":
          description: Worker service is not ready
          content: {}
    put:
      summary: "Drains this worker, i.e., moves its work-assignments to other workers"
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "408":
          description: Request timeout
          content: {}
        "409":
          description: Drain already in progress
          content: {}
        "503":
          description: Worker service is not ready
          content: {}
  /worker/leader/drain:
    get:
      summary: Get the status of any ongoing drain operation at the specified worker
      parameters:
      - name: workerId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LongRunningProcessStatus'
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "503":
          description: Worker service is not ready
          content: {}
    put:
      summary: "Drains the specified worker, i.e., moves its work-assignments to other\
        \ workers"
      parameters:
      - name: workerId
        in: query
        schema:
          type: string
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "408":
          description: Request timeout
          content: {}
        "409":
          description: Drain already in progress
          content: {}
        "503":
          description: Worker service is not ready
          content: {}
  /worker/rebalance:
    put:
      summary: Triggers a rebalance of functions to workers
      responses:
        "204":
          description: Operation successful
          content: {}
        "400":
          description: Invalid request
          content: {}
        "403":
          description: The requester doesn't have admin permissions
          content: {}
        "408":
          description: Request timeout
          content: {}
components:
  schemas:
    AllocatorStats:
      type: object
      properties:
        directArenas:
          type: array
          items:
            $ref: '#/components/schemas/PoolArenaStats'
        heapArenas:
          type: array
          items:
            $ref: '#/components/schemas/PoolArenaStats'
        normalCacheSize:
          type: integer
          format: int32
        numDirectArenas:
          type: integer
          format: int32
        numHeapArenas:
          type: integer
          format: int32
        numThreadLocalCaches:
          type: integer
          format: int32
        smallCacheSize:
          type: integer
          format: int32
    AuthPolicies:
      type: object
      properties:
        namespaceAuthentication:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
              - produce
              - consume
              - functions
              - sources
              - sinks
              - packages
        subscriptionAuthentication:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
        topicAuthentication:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                - produce
                - consume
                - functions
                - sources
                - sinks
                - packages
    AuthenticationDataSource:
      type: object
      properties:
        commandData:
          type: string
        httpAuthType:
          type: string
        peerAddress:
          $ref: '#/components/schemas/SocketAddress'
        subscription:
          type: string
        tlsCertificates:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
    AuthenticationParameters:
      type: object
      properties:
        clientAuthenticationDataSource:
          $ref: '#/components/schemas/AuthenticationDataSource'
        clientRole:
          type: string
        originalPrincipal:
          type: string
    AutoFailoverPolicyData:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
        policyType:
          type: string
          enum:
          - min_available
    AutoSubscriptionCreationOverride:
      type: object
      properties:
        allowAutoSubscriptionCreation:
          type: boolean
    AutoSubscriptionCreationOverrideImpl:
      type: object
      properties:
        allowAutoSubscriptionCreation:
          type: boolean
    AutoTopicCreationOverride:
      type: object
      properties:
        allowAutoTopicCreation:
          type: boolean
        defaultNumPartitions:
          type: integer
          format: int32
        topicType:
          type: string
    AutoTopicCreationOverrideImpl:
      type: object
      properties:
        allowAutoTopicCreation:
          type: boolean
        defaultNumPartitions:
          type: integer
          format: int32
        topicType:
          type: string
    BacklogQuota:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        limitSize:
          type: integer
          format: int64
        limitTime:
          type: integer
          format: int32
        policy:
          type: string
          enum:
          - producer_request_hold
          - producer_exception
          - consumer_backlog_eviction
    BacklogQuotaImpl:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        limitSize:
          type: integer
          format: int64
        limitTime:
          type: integer
          format: int32
        policy:
          type: string
          enum:
          - producer_request_hold
          - producer_exception
          - consumer_backlog_eviction
    BitSet:
      type: object
      properties:
        empty:
          type: boolean
    BookieAffinityGroupData:
      type: object
      properties:
        bookkeeperAffinityGroupPrimary:
          type: string
        bookkeeperAffinityGroupSecondary:
          type: string
    BookieAffinityGroupDataImpl:
      type: object
      properties:
        bookkeeperAffinityGroupPrimary:
          type: string
        bookkeeperAffinityGroupSecondary:
          type: string
    BookieInfo:
      type: object
      properties:
        hostname:
          type: string
        rack:
          type: string
    BookiesClusterInfo:
      type: object
      properties:
        bookies:
          type: array
          items:
            $ref: '#/components/schemas/RawBookieInfo'
    BrokerInfo:
      type: object
      properties:
        brokerId:
          type: string
        serviceUrl:
          type: string
    BrokerNamespaceIsolationData:
      type: object
      properties:
        brokerName:
          type: string
          description: The broker name
          example: broker1:8080
        namespaceRegex:
          type: array
          description: The namespace-isolation policies attached to this broker
          items:
            type: string
        policyName:
          type: string
          description: Policy name
          example: my-policy
        primary:
          type: boolean
      description: The namespace isolation data for a given broker
    BundlesData:
      type: object
      properties:
        boundaries:
          type: array
          items:
            type: string
        numBundles:
          type: integer
          format: int32
    BundlesDataImpl:
      type: object
      properties:
        boundaries:
          type: array
          items:
            type: string
        numBundles:
          type: integer
          format: int32
    Certificate:
      type: object
      properties:
        encoded:
          type: array
          items:
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
            format: byte
        publicKey:
          $ref: '#/components/schemas/PublicKey'
        type:
          type: string
    ClusterData:
      type: object
      properties:
        authenticationParameters:
          type: string
          description: Authentication parameters when client would like to connect
            to cluster.
        authenticationPlugin:
          type: string
          description: Authentication plugin when client would like to connect to
            cluster.
          example: org.apache.pulsar.client.impl.auth.AuthenticationToken
        brokerClientCertificateFilePath:
          type: string
          description: "TLS certificate file for internal client, used by the internal\
            \ client to authenticate with Pulsar brokers"
        brokerClientKeyFilePath:
          type: string
          description: "TLS private key file for internal client, used by the internal\
            \ client to authenticate with Pulsar brokers"
        brokerClientTlsEnabled:
          type: boolean
          description: Enable TLS when talking with other brokers in the same cluster
            (admin operation) or different clusters (replication)
        brokerClientTlsEnabledWithKeyStore:
          type: boolean
          description: Whether internal client use KeyStore type to authenticate with
            other Pulsar brokers
        brokerClientTlsKeyStore:
          type: string
          description: "TLS KeyStore path for internal client,  used by the internal\
            \ client to authenticate with Pulsar brokers"
        brokerClientTlsKeyStorePassword:
          type: string
          description: "TLS KeyStore password for internal client,  used by the internal\
            \ client to authenticate with Pulsar brokers"
        brokerClientTlsKeyStoreType:
          type: string
          description: "TLS KeyStore type configuration for internal client: JKS,\
            \ PKCS12, used by the internal client to authenticate with Pulsar brokers"
        brokerClientTlsTrustStore:
          type: string
          description: TLS TrustStore path for internal client used by the internal
            client to authenticate with Pulsar brokers
        brokerClientTlsTrustStorePassword:
          type: string
          description: TLS TrustStore password for internal client used by the internal
            client to authenticate with Pulsar brokers
        brokerClientTlsTrustStoreType:
          type: string
          description: "TLS TrustStore type configuration for internal client: JKS,\
            \ PKCS12 used by the internal client to authenticate with Pulsar brokers"
          example: JKS
        brokerClientTrustCertsFilePath:
          type: string
          description: Path for the trusted TLS certificate file for outgoing connection
            to a server (broker)
        brokerServiceUrl:
          type: string
          description: The broker service url (for produce and consume operations)
          example: pulsar://pulsar.example.com:6650
        brokerServiceUrlTls:
          type: string
          description: The secured broker service url (for produce and consume operations)
          example: pulsar+ssl://pulsar.example.com:6651
        listenerName:
          type: string
          description: listenerName when client would like to connect to cluster
        migrated:
          type: boolean
          description: flag to check if cluster is migrated to different cluster
          example: false
        migratedClusterUrl:
          $ref: '#/components/schemas/ClusterUrl'
        peerClusterNames:
          uniqueItems: true
          type: array
          description: A set of peer cluster names
          items:
            type: string
        proxyProtocol:
          type: string
          description: "protocol to decide type of proxy routing eg: SNI-routing"
          example: SNI
          enum:
          - SNI
        proxyServiceUrl:
          type: string
          description: Proxy-service url when client would like to connect to broker
            via proxy.
          example: pulsar+ssl://ats-proxy.example.com:4443 or pulsar://ats-proxy.example.com:4080
        serviceUrl:
          type: string
          description: The HTTP rest service URL (for admin operations)
          example: http://pulsar.example.com:8080
        serviceUrlTls:
          type: string
          description: The HTTPS rest service URL (for admin operations)
          example: https://pulsar.example.com:8443
        tlsAllowInsecureConnection:
          type: boolean
          description: Allow TLS connections to servers whose certificate cannot be
            be verified to have been signed by a trusted certificate authority.
      description: The configuration data for a cluster
    ClusterUrl:
      type: object
      properties:
        brokerServiceUrl:
          type: string
        brokerServiceUrlTls:
          type: string
        empty:
          type: boolean
    CompactionStats:
      type: object
      properties:
        lastCompactionDurationTimeInMills:
          type: integer
          format: int64
        lastCompactionFailedTimestamp:
          type: integer
          format: int64
        lastCompactionRemovedEventCount:
          type: integer
          format: int64
        lastCompactionSucceedTimestamp:
          type: integer
          format: int64
    CompactionStatsImpl:
      type: object
      properties:
        lastCompactionDurationTimeInMills:
          type: integer
          format: int64
        lastCompactionFailedTimestamp:
          type: integer
          format: int64
        lastCompactionRemovedEventCount:
          type: integer
          format: int64
        lastCompactionSucceedTimestamp:
          type: integer
          format: int64
    CompletableFuture:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFutureClusterData:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFutureListSchemaAndMetadata:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFutureLong:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFuturePairBooleanSchemaCompatibilityStrategy:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFuturePartitionedTopicMetadata:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFutureResourceQuota:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFutureSchemaAndMetadata:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFutureSchemaVersion:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    CompletableFutureVoid:
      type: object
      properties:
        cancelled:
          type: boolean
        completedExceptionally:
          type: boolean
        done:
          type: boolean
        numberOfDependents:
          type: integer
          format: int32
    ConnectorDefinition:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        sinkClass:
          type: string
        sinkConfigClass:
          type: string
        sourceClass:
          type: string
        sourceConfigClass:
          type: string
    ConsumerStats:
      type: object
      properties:
        address:
          type: string
        availablePermits:
          type: integer
          format: int32
        avgMessagesPerEntry:
          type: integer
          format: int32
        blockedConsumerOnUnackedMsgs:
          type: boolean
        bytesOutCounter:
          type: integer
          format: int64
        chunkedMessageRate:
          type: number
          format: double
        clientVersion:
          type: string
        connectedSince:
          type: string
        consumerName:
          type: string
        keyHashRanges:
          type: array
          items:
            type: string
        lastAckedTimestamp:
          type: integer
          format: int64
        lastConsumedFlowTimestamp:
          type: integer
          format: int64
        lastConsumedTimestamp:
          type: integer
          format: int64
        messageAckRate:
          type: number
          format: double
        metadata:
          type: object
          additionalProperties:
            type: string
        msgOutCounter:
          type: integer
          format: int64
        msgRateOut:
          type: number
          format: double
        msgRateRedeliver:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        readPositionWhenJoining:
          type: string
        unackedMessages:
          type: integer
          format: int32
    CursorDetails:
      type: object
      properties:
        cursorBacklog:
          type: integer
          format: int64
        cursorLedgerId:
          type: integer
          format: int64
    CursorInfo:
      type: object
      properties:
        creationDate:
          type: string
        cursorsLedgerId:
          type: integer
          format: int64
        individualDeletedMessages:
          type: array
          items:
            $ref: '#/components/schemas/MessageRangeInfo'
        markDelete:
          $ref: '#/components/schemas/PositionInfo'
        modificationDate:
          type: string
        properties:
          type: object
          additionalProperties:
            type: integer
            format: int64
        version:
          type: integer
          format: int64
    CursorStats:
      type: object
      properties:
        active:
          type: boolean
        cursorLedger:
          type: integer
          format: int64
        cursorLedgerLastEntry:
          type: integer
          format: int64
        individuallyDeletedMessages:
          type: string
        lastLedgerSwitchTimestamp:
          type: string
        markDeletePosition:
          type: string
        messagesConsumedCounter:
          type: integer
          format: int64
        numberOfEntriesSinceFirstNotAckedMessage:
          type: integer
          format: int64
        pendingReadOps:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: integer
            format: int64
        readPosition:
          type: string
        state:
          type: string
        subscriptionHavePendingRead:
          type: boolean
        subscriptionHavePendingReplayRead:
          type: boolean
        totalNonContiguousDeletedMessagesRange:
          type: integer
          format: int32
        waitingReadOp:
          type: boolean
    DelayedDeliveryPolicies:
      type: object
      properties:
        active:
          type: boolean
        tickTime:
          type: integer
          format: int64
    DeleteSchemaResponse:
      type: object
      properties:
        version:
          type: integer
          format: int64
    DispatchRate:
      type: object
      properties:
        dispatchThrottlingRateInByte:
          type: integer
          format: int64
        dispatchThrottlingRateInMsg:
          type: integer
          format: int32
        ratePeriodInSecond:
          type: integer
          format: int32
        relativeToPublishRate:
          type: boolean
    DispatchRateImpl:
      type: object
      properties:
        dispatchThrottlingRateInByte:
          type: integer
          format: int64
        dispatchThrottlingRateInMsg:
          type: integer
          format: int32
        ratePeriodInSecond:
          type: integer
          format: int32
        relativeToPublishRate:
          type: boolean
    EntryFilters:
      type: object
      properties:
        entryFilterNames:
          type: string
    FailureDomain:
      type: object
      properties:
        brokers:
          uniqueItems: true
          type: array
          description: The collection of brokers in the same failure domain
          example: "[ 'broker-1', 'broker-2' ]"
          items:
            type: string
      description: The data of a failure domain configuration in a cluster
    FunctionInstanceStatsData:
      type: object
      properties:
        avgProcessLatency:
          type: number
          format: double
        lastInvocation:
          type: integer
          format: int64
        oneMin:
          $ref: '#/components/schemas/FunctionInstanceStatsDataBase'
        processedSuccessfullyTotal:
          type: integer
          format: int64
        receivedTotal:
          type: integer
          format: int64
        systemExceptionsTotal:
          type: integer
          format: int64
        userExceptionsTotal:
          type: integer
          format: int64
        userMetrics:
          type: object
          additionalProperties:
            type: number
            format: double
    FunctionInstanceStatsDataBase:
      type: object
      properties:
        avgProcessLatency:
          type: number
          format: double
        processedSuccessfullyTotal:
          type: integer
          format: int64
        receivedTotal:
          type: integer
          format: int64
        systemExceptionsTotal:
          type: integer
          format: int64
        userExceptionsTotal:
          type: integer
          format: int64
    Functions:
      type: object
      properties:
        listOfConnectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
    FunctionsV2:
      type: object
      properties:
        listOfConnectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
    FunctionsV2WorkerService:
      type: object
      properties:
        listOfConnectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
    FunctionsWorkerService:
      type: object
      properties:
        listOfConnectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
    GetAllVersionsSchemaResponse:
      type: object
      properties:
        getSchemaResponses:
          type: array
          items:
            $ref: '#/components/schemas/GetSchemaResponse'
    GetSchemaResponse:
      type: object
      properties:
        data:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
        timestamp:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - NONE
          - STRING
          - JSON
          - PROTOBUF
          - AVRO
          - BOOLEAN
          - INT8
          - INT16
          - INT32
          - INT64
          - FLOAT
          - DOUBLE
          - DATE
          - TIME
          - TIMESTAMP
          - KEY_VALUE
          - INSTANT
          - LOCAL_DATE
          - LOCAL_TIME
          - LOCAL_DATE_TIME
          - PROTOBUF_NATIVE
          - BYTES
          - AUTO
          - AUTO_CONSUME
          - AUTO_PUBLISH
        version:
          type: integer
          format: int64
    InactiveTopicPolicies:
      type: object
      properties:
        deleteWhileInactive:
          type: boolean
        inactiveTopicDeleteMode:
          type: string
          enum:
          - delete_when_no_subscriptions
          - delete_when_subscriptions_caught_up
        maxInactiveDurationSeconds:
          type: integer
          format: int32
    InternalConfigurationData:
      type: object
      properties:
        bookkeeperMetadataServiceUri:
          type: string
        configurationMetadataStoreUrl:
          type: string
        configurationStoreServers:
          type: string
        ledgersRootPath:
          type: string
        metadataStoreUrl:
          type: string
        stateStorageServiceUrl:
          type: string
        zookeeperServers:
          type: string
    IsCompatibilityResponse:
      type: object
      properties:
        compatibility:
          type: boolean
        schemaCompatibilityStrategy:
          type: string
    KubernetesContainerFactory:
      type: object
      properties:
        changeConfigMap:
          type: string
        changeConfigMapNamespace:
          type: string
        configAdminCLI:
          type: string
        cpuOverCommitRatio:
          type: number
          format: double
        customLabels:
          type: object
          additionalProperties:
            type: string
        expectedMetricsCollectionInterval:
          type: integer
          format: int32
        extraFunctionDependenciesDir:
          type: string
        functionDockerImages:
          type: object
          additionalProperties:
            type: string
        functionInstanceClassPath:
          type: string
        gracePeriodSeconds:
          type: integer
          format: int32
        grpcPort:
          type: integer
          format: int32
        imagePullPolicy:
          type: string
        installUserCodeDependencies:
          type: boolean
        jobName:
          type: string
        jobNamespace:
          type: string
        k8Uri:
          type: string
        kubernetesFunctionAuthProviderConfig:
          type: object
          additionalProperties:
            type: object
            properties: {}
        memoryOverCommitRatio:
          type: number
          format: double
        metricsPort:
          type: integer
          format: int32
        narExtractionDirectory:
          type: string
        percentMemoryPadding:
          type: integer
          format: int32
        pulsarAdminUrl:
          type: string
        pulsarDockerImageName:
          type: string
        pulsarRootDir:
          type: string
        pulsarServiceUrl:
          type: string
        pythonDependencyRepository:
          type: string
        pythonExtraDependencyRepository:
          type: string
        submittingInsidePod:
          type: boolean
    LedgerDetails:
      type: object
      properties:
        entries:
          type: integer
          format: int64
        ledgerId:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        timestamp:
          type: integer
          format: int64
    LedgerInfo:
      type: object
      properties:
        entries:
          type: integer
          format: int64
        isOffloaded:
          type: boolean
        ledgerId:
          type: integer
          format: int64
        offloadedContextUuid:
          type: string
        size:
          type: integer
          format: int64
        timestamp:
          type: integer
          format: int64
    LoadReport:
      type: object
      properties:
        allocatedBandwidthIn:
          type: number
          format: double
        allocatedBandwidthOut:
          type: number
          format: double
        allocatedCPU:
          type: number
          format: double
        allocatedMemory:
          type: number
          format: double
        allocatedMsgRateIn:
          type: number
          format: double
        allocatedMsgRateOut:
          type: number
          format: double
        bandwidthIn:
          $ref: '#/components/schemas/ResourceUsage'
        bandwidthOut:
          $ref: '#/components/schemas/ResourceUsage'
        brokerVersionString:
          type: string
        bundleGains:
          uniqueItems: true
          type: array
          items:
            type: string
        bundleLosses:
          uniqueItems: true
          type: array
          items:
            type: string
        bundleStats:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NamespaceBundleStats'
        cpu:
          $ref: '#/components/schemas/ResourceUsage'
        directMemory:
          $ref: '#/components/schemas/ResourceUsage'
        lastUpdate:
          type: integer
          format: int64
        loadManagerClassName:
          type: string
        loadReportType:
          type: string
        memory:
          $ref: '#/components/schemas/ResourceUsage'
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        name:
          type: string
        nonPersistentTopicsEnabled:
          type: boolean
        numBundles:
          type: integer
          format: int32
        numConsumers:
          type: integer
          format: int32
        numProducers:
          type: integer
          format: int32
        numTopics:
          type: integer
          format: int32
        overLoaded:
          type: boolean
        persistentTopicsEnabled:
          type: boolean
        preAllocatedBandwidthIn:
          type: number
          format: double
        preAllocatedBandwidthOut:
          type: number
          format: double
        preAllocatedCPU:
          type: number
          format: double
        preAllocatedMemory:
          type: number
          format: double
        preAllocatedMsgRateIn:
          type: number
          format: double
        preAllocatedMsgRateOut:
          type: number
          format: double
        protocols:
          type: object
          additionalProperties:
            type: string
        pulsarServiceUrl:
          type: string
        pulsarServiceUrlTls:
          type: string
        startTimestamp:
          type: integer
          format: int64
        systemResourceUsage:
          $ref: '#/components/schemas/SystemResourceUsage'
        timestamp:
          type: integer
          format: int64
        underLoaded:
          type: boolean
        webServiceUrl:
          type: string
        webServiceUrlTls:
          type: string
    LongRunningProcessStatus:
      type: object
      properties:
        lastError:
          type: string
        status:
          type: string
          enum:
          - NOT_RUN
          - RUNNING
          - SUCCESS
          - ERROR
    LongSchemaVersion:
      type: object
      properties:
        version:
          type: integer
          format: int64
    ManagedLedgerInfo:
      type: object
      properties:
        creationDate:
          type: string
        cursors:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CursorInfo'
        ledgers:
          type: array
          items:
            $ref: '#/components/schemas/LedgerInfo'
        modificationDate:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
        terminatedPosition:
          $ref: '#/components/schemas/PositionInfo'
        version:
          type: integer
          format: int64
    MemoryLimit:
      type: object
      properties:
        absoluteValue:
          type: integer
          format: int64
        percentOfMaxDirectMemory:
          type: number
          format: double
    MessageId:
      type: object
    MessageIdAdv:
      type: object
      properties:
        ackSet:
          $ref: '#/components/schemas/BitSet'
        batchIndex:
          type: integer
          format: int32
        batchSize:
          type: integer
          format: int32
        entryId:
          type: integer
          format: int64
        firstChunkMessageId:
          $ref: '#/components/schemas/MessageIdAdv'
        ledgerId:
          type: integer
          format: int64
        partitionIndex:
          type: integer
          format: int32
    MessageRangeInfo:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/PositionInfo'
        to:
          $ref: '#/components/schemas/PositionInfo'
    Metrics:
      type: object
      properties:
        dimensions:
          type: object
          additionalProperties:
            type: string
        metrics:
          type: object
          additionalProperties:
            type: object
            properties: {}
    NamespaceBundleStats:
      type: object
      properties:
        cacheSize:
          type: integer
          format: int64
        consumerCount:
          type: integer
          format: int32
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        producerCount:
          type: integer
          format: int32
        topics:
          type: integer
          format: int64
    NamespaceIsolationData:
      type: object
      properties:
        auto_failover_policy:
          $ref: '#/components/schemas/AutoFailoverPolicyData'
        namespaces:
          type: array
          description: The list of namespaces to apply this namespace isolation data
          items:
            type: string
        primary:
          type: array
          description: The list of primary brokers for serving the list of namespaces
            in this isolation policy
          items:
            type: string
        secondary:
          type: array
          description: The list of secondary brokers for serving the list of namespaces
            in this isolation policy
          items:
            type: string
      description: The data of namespace isolation configuration
    NamespaceOwnershipStatus:
      type: object
      properties:
        broker_assignment:
          type: string
          enum:
          - primary
          - secondary
          - shared
        is_active:
          type: boolean
        is_controlled:
          type: boolean
    NonPersistentPartitionedTopicStatsImpl:
      type: object
      properties:
        abortedTxnCount:
          type: integer
          format: int64
        averageMsgSize:
          type: number
          format: double
        backlogQuotaLimitSize:
          type: integer
          format: int64
        backlogQuotaLimitTime:
          type: integer
          format: int64
        backlogSize:
          type: integer
          format: int64
        bytesInCounter:
          type: integer
          format: int64
        bytesOutCounter:
          type: integer
          format: int64
        committedTxnCount:
          type: integer
          format: int64
        compaction:
          $ref: '#/components/schemas/CompactionStatsImpl'
        deduplicationStatus:
          type: string
        delayedMessageIndexSizeInBytes:
          type: integer
          format: int64
        earliestMsgPublishTimeInBacklogs:
          type: integer
          format: int64
        lastOffloadFailureTimeStamp:
          type: integer
          format: int64
        lastOffloadLedgerId:
          type: integer
          format: int64
        lastOffloadSuccessTimeStamp:
          type: integer
          format: int64
        metadata:
          $ref: '#/components/schemas/PartitionedTopicMetadata'
        msgChunkPublished:
          type: boolean
        msgDropRate:
          type: number
          format: double
        msgInCounter:
          type: integer
          format: int64
        msgOutCounter:
          type: integer
          format: int64
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        nonContiguousDeletedMessagesRanges:
          type: integer
          format: int32
        nonContiguousDeletedMessagesRangesSerializedSize:
          type: integer
          format: int32
        offloadedStorageSize:
          type: integer
          format: int64
        oldestBacklogMessageAgeSeconds:
          type: integer
          format: int64
        oldestBacklogMessageSubscriptionName:
          type: string
        ongoingTxnCount:
          type: integer
          format: int64
        ownerBroker:
          type: string
        partitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NonPersistentTopicStatsImpl'
        publishRateLimitedTimes:
          type: integer
          format: int64
        publishers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/NonPersistentPublisherStats'
        replication:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NonPersistentReplicatorStats'
          readOnly: true
        storageSize:
          type: integer
          format: int64
        subscriptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NonPersistentSubscriptionStats'
          readOnly: true
        topicEpoch:
          type: integer
          format: int64
        waitingPublishers:
          type: integer
          format: int32
    NonPersistentPublisherStats:
      type: object
      properties:
        accessMode:
          type: string
          enum:
          - Shared
          - Exclusive
          - ExclusiveWithFencing
          - WaitForExclusive
        address:
          type: string
        averageMsgSize:
          type: number
          format: double
        chunkedMessageRate:
          type: number
          format: double
        clientVersion:
          type: string
        connectedSince:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        msgDropRate:
          type: number
          format: double
        msgRateIn:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        producerId:
          type: integer
          format: int64
        producerName:
          type: string
        supportsPartialProducer:
          type: boolean
    NonPersistentReplicatorStats:
      type: object
      properties:
        connected:
          type: boolean
        inboundConnectedSince:
          type: string
        inboundConnection:
          type: string
        msgDropRate:
          type: number
          format: double
        msgRateExpired:
          type: number
          format: double
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        outboundConnectedSince:
          type: string
        outboundConnection:
          type: string
        replicationBacklog:
          type: integer
          format: int64
        replicationDelayInSeconds:
          type: integer
          format: int64
    NonPersistentSubscriptionStats:
      type: object
      properties:
        activeConsumerName:
          type: string
        allowOutOfOrderDelivery:
          type: boolean
        backlogSize:
          type: integer
          format: int64
        blockedSubscriptionOnUnackedMsgs:
          type: boolean
        bytesOutCounter:
          type: integer
          format: int64
        chunkedMessageRate:
          type: integer
          format: int32
        consumers:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerStats'
        consumersAfterMarkDeletePosition:
          type: object
          additionalProperties:
            type: string
        delayedMessageIndexSizeInBytes:
          type: integer
          format: int64
        durable:
          type: boolean
        earliestMsgPublishTimeInBacklog:
          type: integer
          format: int64
        filterAcceptedMsgCount:
          type: integer
          format: int64
        filterProcessedMsgCount:
          type: integer
          format: int64
        filterRejectedMsgCount:
          type: integer
          format: int64
        filterRescheduledMsgCount:
          type: integer
          format: int64
        keySharedMode:
          type: string
        lastAckedTimestamp:
          type: integer
          format: int64
        lastConsumedFlowTimestamp:
          type: integer
          format: int64
        lastConsumedTimestamp:
          type: integer
          format: int64
        lastExpireTimestamp:
          type: integer
          format: int64
        lastMarkDeleteAdvancedTimestamp:
          type: integer
          format: int64
        messageAckRate:
          type: number
          format: double
        msgBacklog:
          type: integer
          format: int64
        msgBacklogNoDelayed:
          type: integer
          format: int64
        msgDelayed:
          type: integer
          format: int64
        msgDropRate:
          type: number
          format: double
        msgOutCounter:
          type: integer
          format: int64
        msgRateExpired:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgRateRedeliver:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        nonContiguousDeletedMessagesRanges:
          type: integer
          format: int32
        nonContiguousDeletedMessagesRangesSerializedSize:
          type: integer
          format: int32
        replicated:
          type: boolean
        subscriptionProperties:
          type: object
          additionalProperties:
            type: string
        totalMsgExpired:
          type: integer
          format: int64
        type:
          type: string
        unackedMessages:
          type: integer
          format: int64
    NonPersistentTopicStatsImpl:
      type: object
      properties:
        abortedTxnCount:
          type: integer
          format: int64
        averageMsgSize:
          type: number
          format: double
        backlogQuotaLimitSize:
          type: integer
          format: int64
        backlogQuotaLimitTime:
          type: integer
          format: int64
        backlogSize:
          type: integer
          format: int64
        bytesInCounter:
          type: integer
          format: int64
        bytesOutCounter:
          type: integer
          format: int64
        committedTxnCount:
          type: integer
          format: int64
        compaction:
          $ref: '#/components/schemas/CompactionStatsImpl'
        deduplicationStatus:
          type: string
        delayedMessageIndexSizeInBytes:
          type: integer
          format: int64
        earliestMsgPublishTimeInBacklogs:
          type: integer
          format: int64
        lastOffloadFailureTimeStamp:
          type: integer
          format: int64
        lastOffloadLedgerId:
          type: integer
          format: int64
        lastOffloadSuccessTimeStamp:
          type: integer
          format: int64
        msgChunkPublished:
          type: boolean
        msgDropRate:
          type: number
          format: double
        msgInCounter:
          type: integer
          format: int64
        msgOutCounter:
          type: integer
          format: int64
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        nonContiguousDeletedMessagesRanges:
          type: integer
          format: int32
        nonContiguousDeletedMessagesRangesSerializedSize:
          type: integer
          format: int32
        offloadedStorageSize:
          type: integer
          format: int64
        oldestBacklogMessageAgeSeconds:
          type: integer
          format: int64
        oldestBacklogMessageSubscriptionName:
          type: string
        ongoingTxnCount:
          type: integer
          format: int64
        ownerBroker:
          type: string
        publishRateLimitedTimes:
          type: integer
          format: int64
        publishers:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/NonPersistentPublisherStats'
        replication:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NonPersistentReplicatorStats'
          readOnly: true
        storageSize:
          type: integer
          format: int64
        subscriptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NonPersistentSubscriptionStats'
          readOnly: true
        topicEpoch:
          type: integer
          format: int64
        waitingPublishers:
          type: integer
          format: int32
    OffloadPolicies:
      type: object
      properties:
        fileSystemProfilePath:
          type: string
        fileSystemURI:
          type: string
        gcsManagedLedgerOffloadBucket:
          type: string
        gcsManagedLedgerOffloadMaxBlockSizeInBytes:
          type: integer
          format: int32
        gcsManagedLedgerOffloadReadBufferSizeInBytes:
          type: integer
          format: int32
        gcsManagedLedgerOffloadRegion:
          type: string
        gcsManagedLedgerOffloadServiceAccountKeyFile:
          type: string
        managedLedgerOffloadBucket:
          type: string
        managedLedgerOffloadDeletionLagInMillis:
          type: integer
          format: int64
        managedLedgerOffloadDriver:
          type: string
        managedLedgerOffloadMaxBlockSizeInBytes:
          type: integer
          format: int32
        managedLedgerOffloadMaxThreads:
          type: integer
          format: int32
        managedLedgerOffloadPrefetchRounds:
          type: integer
          format: int32
        managedLedgerOffloadReadBufferSizeInBytes:
          type: integer
          format: int32
        managedLedgerOffloadRegion:
          type: string
        managedLedgerOffloadServiceEndpoint:
          type: string
        managedLedgerOffloadThresholdInBytes:
          type: integer
          format: int64
        managedLedgerOffloadThresholdInSeconds:
          type: integer
          format: int64
        managedLedgerOffloadedReadPriority:
          type: string
          enum:
          - BOOKKEEPER_FIRST
          - TIERED_STORAGE_FIRST
        offloadersDirectory:
          type: string
        s3ManagedLedgerOffloadBucket:
          type: string
        s3ManagedLedgerOffloadCredentialId:
          type: string
        s3ManagedLedgerOffloadCredentialSecret:
          type: string
        s3ManagedLedgerOffloadMaxBlockSizeInBytes:
          type: integer
          format: int32
        s3ManagedLedgerOffloadReadBufferSizeInBytes:
          type: integer
          format: int32
        s3ManagedLedgerOffloadRegion:
          type: string
        s3ManagedLedgerOffloadRole:
          type: string
        s3ManagedLedgerOffloadRoleSessionName:
          type: string
        s3ManagedLedgerOffloadServiceEndpoint:
          type: string
    OffloadPoliciesImpl:
      type: object
      properties:
        fileSystemDriver:
          type: boolean
        fileSystemProfilePath:
          type: string
        fileSystemURI:
          type: string
        gcsDriver:
          type: boolean
        gcsManagedLedgerOffloadBucket:
          type: string
        gcsManagedLedgerOffloadMaxBlockSizeInBytes:
          type: integer
          format: int32
        gcsManagedLedgerOffloadReadBufferSizeInBytes:
          type: integer
          format: int32
        gcsManagedLedgerOffloadRegion:
          type: string
        gcsManagedLedgerOffloadServiceAccountKeyFile:
          type: string
        managedLedgerExtraConfigurations:
          type: object
          additionalProperties:
            type: string
        managedLedgerOffloadBucket:
          type: string
        managedLedgerOffloadDeletionLagInMillis:
          type: integer
          format: int64
        managedLedgerOffloadDriver:
          type: string
        managedLedgerOffloadMaxBlockSizeInBytes:
          type: integer
          format: int32
        managedLedgerOffloadMaxThreads:
          type: integer
          format: int32
        managedLedgerOffloadPrefetchRounds:
          type: integer
          format: int32
        managedLedgerOffloadReadBufferSizeInBytes:
          type: integer
          format: int32
        managedLedgerOffloadRegion:
          type: string
        managedLedgerOffloadServiceEndpoint:
          type: string
        managedLedgerOffloadThresholdInBytes:
          type: integer
          format: int64
        managedLedgerOffloadThresholdInSeconds:
          type: integer
          format: int64
        managedLedgerOffloadedReadPriority:
          type: string
          enum:
          - BOOKKEEPER_FIRST
          - TIERED_STORAGE_FIRST
        offloadersDirectory:
          type: string
        s3Driver:
          type: boolean
        s3ManagedLedgerOffloadBucket:
          type: string
        s3ManagedLedgerOffloadCredentialId:
          type: string
        s3ManagedLedgerOffloadCredentialSecret:
          type: string
        s3ManagedLedgerOffloadMaxBlockSizeInBytes:
          type: integer
          format: int32
        s3ManagedLedgerOffloadReadBufferSizeInBytes:
          type: integer
          format: int32
        s3ManagedLedgerOffloadRegion:
          type: string
        s3ManagedLedgerOffloadRole:
          type: string
        s3ManagedLedgerOffloadRoleSessionName:
          type: string
        s3ManagedLedgerOffloadServiceEndpoint:
          type: string
    OffloadProcessStatus:
      type: object
      properties:
        firstUnoffloadedMessage:
          $ref: '#/components/schemas/MessageId'
        lastError:
          type: string
        status:
          type: string
          enum:
          - NOT_RUN
          - RUNNING
          - SUCCESS
          - ERROR
    OutputStream:
      type: object
    PartitionedManagedLedgerInfo:
      type: object
      properties:
        creationDate:
          type: string
        cursors:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CursorInfo'
        ledgers:
          type: array
          items:
            $ref: '#/components/schemas/LedgerInfo'
        modificationDate:
          type: string
        partitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ManagedLedgerInfo'
        properties:
          type: object
          additionalProperties:
            type: string
        terminatedPosition:
          $ref: '#/components/schemas/PositionInfo'
        version:
          type: integer
          format: int64
    PartitionedTopicInternalStats:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/PartitionedTopicMetadata'
        partitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PersistentTopicInternalStats'
    PartitionedTopicMetadata:
      type: object
      properties:
        deleted:
          type: boolean
        partitions:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: string
    PartitionedTopicStatsImpl:
      type: object
      properties:
        abortedTxnCount:
          type: integer
          format: int64
        averageMsgSize:
          type: number
          format: double
        backlogQuotaLimitSize:
          type: integer
          format: int64
        backlogQuotaLimitTime:
          type: integer
          format: int64
        backlogSize:
          type: integer
          format: int64
        bytesInCounter:
          type: integer
          format: int64
        bytesOutCounter:
          type: integer
          format: int64
        committedTxnCount:
          type: integer
          format: int64
        compaction:
          $ref: '#/components/schemas/CompactionStatsImpl'
        deduplicationStatus:
          type: string
        delayedMessageIndexSizeInBytes:
          type: integer
          format: int64
        earliestMsgPublishTimeInBacklogs:
          type: integer
          format: int64
        lastOffloadFailureTimeStamp:
          type: integer
          format: int64
        lastOffloadLedgerId:
          type: integer
          format: int64
        lastOffloadSuccessTimeStamp:
          type: integer
          format: int64
        metadata:
          $ref: '#/components/schemas/PartitionedTopicMetadata'
        msgChunkPublished:
          type: boolean
        msgInCounter:
          type: integer
          format: int64
        msgOutCounter:
          type: integer
          format: int64
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        nonContiguousDeletedMessagesRanges:
          type: integer
          format: int32
        nonContiguousDeletedMessagesRangesSerializedSize:
          type: integer
          format: int32
        offloadedStorageSize:
          type: integer
          format: int64
        oldestBacklogMessageAgeSeconds:
          type: integer
          format: int64
        oldestBacklogMessageSubscriptionName:
          type: string
        ongoingTxnCount:
          type: integer
          format: int64
        ownerBroker:
          type: string
        partitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TopicStats'
        publishRateLimitedTimes:
          type: integer
          format: int64
        publishers:
          type: array
          items:
            $ref: '#/components/schemas/PublisherStats'
        replication:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ReplicatorStats'
        storageSize:
          type: integer
          format: int64
        subscriptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SubscriptionStats'
        topicEpoch:
          type: integer
          format: int64
        waitingPublishers:
          type: integer
          format: int32
    PendingBookieOpsStats:
      type: object
      properties:
        cursorLedgerCloseOp:
          type: integer
          format: int64
        cursorLedgerCreateOp:
          type: integer
          format: int64
        cursorLedgerDeleteOp:
          type: integer
          format: int64
        cursorLedgerOpenOp:
          type: integer
          format: int64
        dataLedgerCloseOp:
          type: integer
          format: int64
        dataLedgerCreateOp:
          type: integer
          format: int64
        dataLedgerDeleteOp:
          type: integer
          format: int64
        dataLedgerOpenOp:
          type: integer
          format: int64
    PersistencePolicies:
      type: object
      properties:
        bookkeeperAckQuorum:
          type: integer
          format: int32
        bookkeeperEnsemble:
          type: integer
          format: int32
        bookkeeperWriteQuorum:
          type: integer
          format: int32
        managedLedgerMaxMarkDeleteRate:
          type: number
          format: double
    PersistentOfflineTopicStats:
      type: object
      properties:
        brokerName:
          type: string
        cursorDetails:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CursorDetails'
        dataLedgerDetails:
          type: array
          items:
            $ref: '#/components/schemas/LedgerDetails'
        messageBacklog:
          type: integer
          format: int64
        statGeneratedAt:
          type: string
          format: date-time
        storageSize:
          type: integer
          format: int64
        topicName:
          type: string
        totalMessages:
          type: integer
          format: int64
    PersistentTopicInternalStats:
      type: object
      properties:
        compactedLedger:
          $ref: '#/components/schemas/LedgerInfo'
        currentLedgerEntries:
          type: integer
          format: int64
        currentLedgerSize:
          type: integer
          format: int64
        cursors:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CursorStats'
        entriesAddedCounter:
          type: integer
          format: int64
        lastConfirmedEntry:
          type: string
        lastLedgerCreatedTimestamp:
          type: string
        lastLedgerCreationFailureTimestamp:
          type: string
        ledgers:
          type: array
          items:
            $ref: '#/components/schemas/LedgerInfo'
        numberOfEntries:
          type: integer
          format: int64
        pendingAddEntriesCount:
          type: integer
          format: int32
        schemaLedgers:
          type: array
          items:
            $ref: '#/components/schemas/LedgerInfo'
        state:
          type: string
        totalSize:
          type: integer
          format: int64
        waitingCursorsCount:
          type: integer
          format: int32
    PersistentTopicStats:
      type: object
      properties:
        averageMsgSize:
          type: number
          format: double
        backlogQuotaLimitSize:
          type: integer
          format: int64
        backlogQuotaLimitTime:
          type: integer
          format: int64
        backlogSize:
          type: integer
          format: int64
        bytesInCounter:
          type: integer
          format: int64
        bytesOutCounter:
          type: integer
          format: int64
        compaction:
          $ref: '#/components/schemas/CompactionStats'
        deduplicationStatus:
          type: string
        delayedMessageIndexSizeInBytes:
          type: integer
          format: int64
        earliestMsgPublishTimeInBacklogs:
          type: integer
          format: int64
        msgChunkPublished:
          type: boolean
        msgInCounter:
          type: integer
          format: int64
        msgOutCounter:
          type: integer
          format: int64
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        nonContiguousDeletedMessagesRanges:
          type: integer
          format: int32
        nonContiguousDeletedMessagesRangesSerializedSize:
          type: integer
          format: int32
        offloadedStorageSize:
          type: integer
          format: int64
        oldestBacklogMessageAgeSeconds:
          type: integer
          format: int64
        oldestBacklogMessageSubscriptionName:
          type: string
        ownerBroker:
          type: string
        publishers:
          type: array
          items:
            $ref: '#/components/schemas/PublisherStats'
        replication:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ReplicatorStats'
        storageSize:
          type: integer
          format: int64
        subscriptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SubscriptionStats'
        topicEpoch:
          type: integer
          format: int64
        waitingPublishers:
          type: integer
          format: int32
    Policies:
      type: object
      properties:
        allowed_clusters:
          uniqueItems: true
          type: array
          items:
            type: string
        auth_policies:
          $ref: '#/components/schemas/AuthPolicies'
        autoSubscriptionCreationOverride:
          $ref: '#/components/schemas/AutoSubscriptionCreationOverride'
        autoTopicCreationOverride:
          $ref: '#/components/schemas/AutoTopicCreationOverride'
        backlog_quota_map:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BacklogQuota'
        bundles:
          $ref: '#/components/schemas/BundlesData'
        clusterDispatchRate:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DispatchRateImpl'
        clusterSubscribeRate:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SubscribeRate'
        compaction_threshold:
          type: integer
          format: int64
        deduplicationEnabled:
          type: boolean
        deduplicationSnapshotIntervalSeconds:
          type: integer
          format: int32
        delayed_delivery_policies:
          $ref: '#/components/schemas/DelayedDeliveryPolicies'
        deleted:
          type: boolean
        encryption_required:
          type: boolean
        entryFilters:
          $ref: '#/components/schemas/EntryFilters'
        inactive_topic_policies:
          $ref: '#/components/schemas/InactiveTopicPolicies'
        is_allow_auto_update_schema:
          type: boolean
        latency_stats_sample_rate:
          type: object
          additionalProperties:
            type: integer
            format: int32
        max_consumers_per_subscription:
          type: integer
          format: int32
        max_consumers_per_topic:
          type: integer
          format: int32
        max_producers_per_topic:
          type: integer
          format: int32
        max_subscriptions_per_topic:
          type: integer
          format: int32
        max_topics_per_namespace:
          type: integer
          format: int32
        max_unacked_messages_per_consumer:
          type: integer
          format: int32
        max_unacked_messages_per_subscription:
          type: integer
          format: int32
        message_ttl_in_seconds:
          type: integer
          format: int32
        offload_deletion_lag_ms:
          type: integer
          format: int64
        offload_policies:
          $ref: '#/components/schemas/OffloadPolicies'
        offload_threshold:
          type: integer
          format: int64
        offload_threshold_in_seconds:
          type: integer
          format: int64
        persistence:
          $ref: '#/components/schemas/PersistencePolicies'
        properties:
          type: object
          additionalProperties:
            type: string
        publishMaxMessageRate:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PublishRate'
        replication_clusters:
          uniqueItems: true
          type: array
          items:
            type: string
        replicatorDispatchRate:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DispatchRateImpl'
        resource_group_name:
          type: string
        retention_policies:
          $ref: '#/components/schemas/RetentionPolicies'
        schema_auto_update_compatibility_strategy:
          type: string
          enum:
          - AutoUpdateDisabled
          - Backward
          - Forward
          - Full
          - AlwaysCompatible
          - BackwardTransitive
          - ForwardTransitive
          - FullTransitive
        schema_compatibility_strategy:
          type: string
          enum:
          - UNDEFINED
          - ALWAYS_INCOMPATIBLE
          - ALWAYS_COMPATIBLE
          - BACKWARD
          - FORWARD
          - FULL
          - BACKWARD_TRANSITIVE
          - FORWARD_TRANSITIVE
          - FULL_TRANSITIVE
        schema_validation_enforced:
          type: boolean
        subscriptionDispatchRate:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DispatchRateImpl'
        subscription_auth_mode:
          type: string
          enum:
          - None
          - Prefix
        subscription_expiration_time_minutes:
          type: integer
          format: int32
        subscription_types_enabled:
          uniqueItems: true
          type: array
          items:
            type: string
        topicDispatchRate:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DispatchRateImpl'
    PoolArenaStats:
      type: object
      properties:
        chunkLists:
          type: array
          items:
            $ref: '#/components/schemas/PoolChunkListStats'
        numActiveAllocations:
          type: integer
          format: int64
        numActiveHugeAllocations:
          type: integer
          format: int64
        numActiveNormalAllocations:
          type: integer
          format: int64
        numActiveSmallAllocations:
          type: integer
          format: int64
        numAllocations:
          type: integer
          format: int64
        numChunkLists:
          type: integer
          format: int32
        numDeallocations:
          type: integer
          format: int64
        numHugeAllocations:
          type: integer
          format: int64
        numHugeDeallocations:
          type: integer
          format: int64
        numNormalAllocations:
          type: integer
          format: int64
        numNormalDeallocations:
          type: integer
          format: int64
        numSmallAllocations:
          type: integer
          format: int64
        numSmallDeallocations:
          type: integer
          format: int64
        numSmallSubpages:
          type: integer
          format: int32
        smallSubpages:
          type: array
          items:
            $ref: '#/components/schemas/PoolSubpageStats'
    PoolChunkListStats:
      type: object
      properties:
        chunks:
          type: array
          items:
            $ref: '#/components/schemas/PoolChunkStats'
        maxUsage:
          type: integer
          format: int32
        minUsage:
          type: integer
          format: int32
    PoolChunkStats:
      type: object
      properties:
        chunkSize:
          type: integer
          format: int32
        freeBytes:
          type: integer
          format: int32
        usage:
          type: integer
          format: int32
    PoolSubpageStats:
      type: object
      properties:
        elementSize:
          type: integer
          format: int32
        maxNumElements:
          type: integer
          format: int32
        numAvailable:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    PositionInfo:
      type: object
      properties:
        entryId:
          type: integer
          format: int64
        ledgerId:
          type: integer
          format: int64
    PostSchemaPayload:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
        schema:
          type: string
        type:
          type: string
    PostSchemaResponse:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/SchemaVersion'
    ProcessContainerFactory:
      type: object
      properties:
        extraFunctionDependenciesDir:
          type: string
        javaInstanceJarLocation:
          type: string
        logDirectory:
          type: string
        pythonInstanceLocation:
          type: string
    PublicKey:
      type: object
      properties:
        algorithm:
          type: string
        encoded:
          type: array
          items:
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
            format: byte
        format:
          type: string
    PublishRate:
      type: object
      properties:
        publishThrottlingRateInByte:
          type: integer
          format: int64
        publishThrottlingRateInMsg:
          type: integer
          format: int32
    PublisherStats:
      type: object
      properties:
        accessMode:
          type: string
          enum:
          - Shared
          - Exclusive
          - ExclusiveWithFencing
          - WaitForExclusive
        address:
          type: string
        averageMsgSize:
          type: number
          format: double
        chunkedMessageRate:
          type: number
          format: double
        clientVersion:
          type: string
        connectedSince:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        msgRateIn:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        producerId:
          type: integer
          format: int64
        producerName:
          type: string
        supportsPartialProducer:
          type: boolean
    RawBookieInfo:
      type: object
      properties:
        bookieId:
          type: string
    ReplicatorStats:
      type: object
      properties:
        connected:
          type: boolean
        inboundConnectedSince:
          type: string
        inboundConnection:
          type: string
        msgRateExpired:
          type: number
          format: double
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        outboundConnectedSince:
          type: string
        outboundConnection:
          type: string
        replicationBacklog:
          type: integer
          format: int64
        replicationDelayInSeconds:
          type: integer
          format: int64
    ResetCursorData:
      type: object
      properties:
        batchIndex:
          type: integer
          format: int32
        entryId:
          type: integer
          format: int64
        excluded:
          type: boolean
        ledgerId:
          type: integer
          format: int64
        partitionIndex:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: string
    ResourceDescription:
      type: object
      properties:
        resourceUsage:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ResourceUsage'
        usagePct:
          type: integer
          format: int32
    ResourceGroup:
      type: object
      properties:
        dispatchRateInBytes:
          type: integer
          format: int64
        dispatchRateInMsgs:
          type: integer
          format: int32
        publishRateInBytes:
          type: integer
          format: int64
        publishRateInMsgs:
          type: integer
          format: int32
    ResourceQuota:
      type: object
      properties:
        bandwidthIn:
          type: number
          format: double
        bandwidthOut:
          type: number
          format: double
        dynamic:
          type: boolean
        memory:
          type: number
          format: double
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
    ResourceUnit:
      type: object
      properties:
        availableResource:
          $ref: '#/components/schemas/ResourceDescription'
        resourceId:
          type: string
    ResourceUsage:
      type: object
      properties:
        limit:
          type: number
          format: double
        usage:
          type: number
          format: double
    Resources:
      type: object
      properties:
        cpu:
          type: number
          format: double
        disk:
          type: integer
          format: int64
        ram:
          type: integer
          format: int64
    RetentionPolicies:
      type: object
      properties:
        retentionSizeInMB:
          type: integer
          format: int64
        retentionTimeInMinutes:
          type: integer
          format: int32
    SchemaVersion:
      type: object
    Sinks:
      type: object
      properties:
        listOfConnectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
        sinkList:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
    SinksWorkerService:
      type: object
      properties:
        listOfConnectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
        sinkList:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
    SocketAddress:
      type: object
    Sources:
      type: object
      properties:
        listOfConnectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
        sourceList:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
    SourcesWorkerService:
      type: object
      properties:
        listOfConnectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
        sourceList:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDefinition'
    SubscribeRate:
      type: object
      properties:
        ratePeriodInSecond:
          type: integer
          format: int32
        subscribeThrottlingRatePerConsumer:
          type: integer
          format: int32
    SubscriptionStats:
      type: object
      properties:
        activeConsumerName:
          type: string
        allowOutOfOrderDelivery:
          type: boolean
        backlogSize:
          type: integer
          format: int64
        blockedSubscriptionOnUnackedMsgs:
          type: boolean
        bytesOutCounter:
          type: integer
          format: int64
        chunkedMessageRate:
          type: integer
          format: int32
        consumers:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerStats'
        consumersAfterMarkDeletePosition:
          type: object
          additionalProperties:
            type: string
        delayedMessageIndexSizeInBytes:
          type: integer
          format: int64
        durable:
          type: boolean
        earliestMsgPublishTimeInBacklog:
          type: integer
          format: int64
        filterAcceptedMsgCount:
          type: integer
          format: int64
        filterProcessedMsgCount:
          type: integer
          format: int64
        filterRejectedMsgCount:
          type: integer
          format: int64
        filterRescheduledMsgCount:
          type: integer
          format: int64
        keySharedMode:
          type: string
        lastAckedTimestamp:
          type: integer
          format: int64
        lastConsumedFlowTimestamp:
          type: integer
          format: int64
        lastConsumedTimestamp:
          type: integer
          format: int64
        lastExpireTimestamp:
          type: integer
          format: int64
        lastMarkDeleteAdvancedTimestamp:
          type: integer
          format: int64
        messageAckRate:
          type: number
          format: double
        msgBacklog:
          type: integer
          format: int64
        msgBacklogNoDelayed:
          type: integer
          format: int64
        msgDelayed:
          type: integer
          format: int64
        msgOutCounter:
          type: integer
          format: int64
        msgRateExpired:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgRateRedeliver:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        nonContiguousDeletedMessagesRanges:
          type: integer
          format: int32
        nonContiguousDeletedMessagesRangesSerializedSize:
          type: integer
          format: int32
        replicated:
          type: boolean
        subscriptionProperties:
          type: object
          additionalProperties:
            type: string
        totalMsgExpired:
          type: integer
          format: int64
        type:
          type: string
        unackedMessages:
          type: integer
          format: int64
    SystemResourceUsage:
      type: object
      properties:
        bandwidthIn:
          $ref: '#/components/schemas/ResourceUsage'
        bandwidthOut:
          $ref: '#/components/schemas/ResourceUsage'
        cpu:
          $ref: '#/components/schemas/ResourceUsage'
        directMemory:
          $ref: '#/components/schemas/ResourceUsage'
        memory:
          $ref: '#/components/schemas/ResourceUsage'
    TenantInfo:
      type: object
      properties:
        adminRoles:
          uniqueItems: true
          type: array
          description: Comma separated list of auth principal allowed to administrate
            the tenant.
          items:
            type: string
        allowedClusters:
          uniqueItems: true
          type: array
          description: Comma separated allowed clusters.
          items:
            type: string
      description: Information of adminRoles and allowedClusters for tenant
    ThreadContainerFactory:
      type: object
      properties:
        pulsarClientMemoryLimit:
          $ref: '#/components/schemas/MemoryLimit'
        threadGroupName:
          type: string
    TopicHashPositions:
      type: object
      properties:
        bundle:
          type: string
        namespace:
          type: string
        topicHashPositions:
          type: object
          additionalProperties:
            type: integer
            format: int64
    TopicStats:
      type: object
      properties:
        averageMsgSize:
          type: number
          format: double
        backlogQuotaLimitSize:
          type: integer
          format: int64
        backlogQuotaLimitTime:
          type: integer
          format: int64
        backlogSize:
          type: integer
          format: int64
        bytesInCounter:
          type: integer
          format: int64
        bytesOutCounter:
          type: integer
          format: int64
        compaction:
          $ref: '#/components/schemas/CompactionStats'
        deduplicationStatus:
          type: string
        delayedMessageIndexSizeInBytes:
          type: integer
          format: int64
        earliestMsgPublishTimeInBacklogs:
          type: integer
          format: int64
        msgChunkPublished:
          type: boolean
        msgInCounter:
          type: integer
          format: int64
        msgOutCounter:
          type: integer
          format: int64
        msgRateIn:
          type: number
          format: double
        msgRateOut:
          type: number
          format: double
        msgThroughputIn:
          type: number
          format: double
        msgThroughputOut:
          type: number
          format: double
        nonContiguousDeletedMessagesRanges:
          type: integer
          format: int32
        nonContiguousDeletedMessagesRangesSerializedSize:
          type: integer
          format: int32
        offloadedStorageSize:
          type: integer
          format: int64
        oldestBacklogMessageAgeSeconds:
          type: integer
          format: int64
        oldestBacklogMessageSubscriptionName:
          type: string
        ownerBroker:
          type: string
        publishers:
          type: array
          items:
            $ref: '#/components/schemas/PublisherStats'
        replication:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ReplicatorStats'
        storageSize:
          type: integer
          format: int64
        subscriptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SubscriptionStats'
        topicEpoch:
          type: integer
          format: int64
        waitingPublishers:
          type: integer
          format: int32
    WorkerConfig:
      type: object
      properties:
        additionalEnabledConnectorUrlPatterns:
          type: array
          items:
            type: string
        additionalEnabledFunctionsUrlPatterns:
          type: array
          items:
            type: string
        additionalJavaRuntimeArguments:
          type: array
          items:
            type: string
        assignmentWriteMaxRetries:
          type: integer
          format: int32
        authenticateMetricsEndpoint:
          type: boolean
        authenticationEnabled:
          type: boolean
        authenticationProviders:
          uniqueItems: true
          type: array
          items:
            type: string
        authorizationEnabled:
          type: boolean
        authorizationProvider:
          type: string
        bookkeeperClientAuthenticationParameters:
          type: string
        bookkeeperClientAuthenticationParametersName:
          type: string
        bookkeeperClientAuthenticationPlugin:
          type: string
        brokerClientAuthenticationEnabled:
          type: boolean
        brokerClientAuthenticationParameters:
          type: string
        brokerClientAuthenticationPlugin:
          type: string
        brokerClientTrustCertsFilePath:
          type: string
        clientAuthenticationParameters:
          type: string
        clientAuthenticationPlugin:
          type: string
        clusterCoordinationTopic:
          type: string
        clusterCoordinationTopicName:
          type: string
        configurationMetadataStoreUrl:
          type: string
        configurationStoreServers:
          type: string
        connectorsDirectory:
          type: string
        downloadDirectory:
          type: string
        enableClassloadingOfBuiltinFiles:
          type: boolean
        enableClassloadingOfExternalFiles:
          type: boolean
        enableReferencingConnectorDirectoryFiles:
          type: boolean
        enableReferencingFunctionsDirectoryFiles:
          type: boolean
        exposeAdminClientEnabled:
          type: boolean
        failureCheckFreqMs:
          type: integer
          format: int64
        forwardSourceMessageProperty:
          type: boolean
        functionAssignmentTopic:
          type: string
        functionAssignmentTopicName:
          type: string
        functionAuthProviderClassName:
          type: string
        functionInstanceMaxResources:
          $ref: '#/components/schemas/Resources'
        functionInstanceMinResources:
          $ref: '#/components/schemas/Resources'
        functionInstanceResourceChangeInLockStep:
          type: boolean
        functionInstanceResourceGranularities:
          $ref: '#/components/schemas/Resources'
        functionMetadataTopic:
          type: string
        functionMetadataTopicName:
          type: string
        functionRuntimeFactoryClassName:
          type: string
        functionRuntimeFactoryConfigs:
          type: object
          additionalProperties:
            type: object
            properties: {}
        functionWebServiceUrl:
          type: string
        functionsDirectory:
          type: string
        functionsWorkerEnablePackageManagement:
          type: boolean
        functionsWorkerServiceCustomConfigs:
          type: object
          additionalProperties:
            type: object
            properties: {}
        functionsWorkerServiceNarPackage:
          type: string
        httpRequestsLimitEnabled:
          type: boolean
        httpRequestsMaxPerSecond:
          type: number
          format: double
        httpServerAcceptQueueSize:
          type: integer
          format: int32
        httpServerThreadPoolQueueSize:
          type: integer
          format: int32
        includeStandardPrometheusMetrics:
          type: boolean
        initialBrokerReconnectMaxRetries:
          type: integer
          format: int32
        initializedDlogMetadata:
          type: boolean
        instanceLivenessCheckFreqMs:
          type: integer
          format: int64
        jvmGCMetricsLoggerClassName:
          type: string
        kinitCommand:
          type: string
        kubernetesContainerFactory:
          $ref: '#/components/schemas/KubernetesContainerFactory'
        maxConcurrentHttpRequests:
          type: integer
          format: int32
        maxHttpServerConnections:
          type: integer
          format: int32
        maxPendingAsyncRequests:
          type: integer
          format: int32
        metadataStoreAllowReadOnlyOperations:
          type: boolean
        metadataStoreCacheExpirySeconds:
          type: integer
          format: int32
        metadataStoreOperationTimeoutSeconds:
          type: integer
          format: int32
        metadataStoreSessionTimeoutMillis:
          type: integer
          format: int64
        narExtractionDirectory:
          type: string
        numFunctionPackageReplicas:
          type: integer
          format: int32
        numHttpServerThreads:
          type: integer
          format: int32
        processContainerFactory:
          $ref: '#/components/schemas/ProcessContainerFactory'
        properties:
          type: object
          additionalProperties:
            type: string
        proxyRoles:
          uniqueItems: true
          type: array
          items:
            type: string
        pulsarFunctionsCluster:
          type: string
        pulsarFunctionsNamespace:
          type: string
        pulsarServiceUrl:
          type: string
        pulsarWebServiceUrl:
          type: string
        rebalanceCheckFreqSec:
          type: integer
          format: int64
        rescheduleTimeoutMs:
          type: integer
          format: int64
        runtimeCustomizerClassName:
          type: string
        runtimeCustomizerConfig:
          type: object
          additionalProperties:
            type: object
            properties: {}
        saslJaasClientAllowedIds:
          type: string
        saslJaasServerRoleTokenSignerSecretPath:
          type: string
        saslJaasServerSectionName:
          type: string
        schedulerClassName:
          type: string
        secretsProviderConfiguratorClassName:
          type: string
        secretsProviderConfiguratorConfig:
          type: object
          additionalProperties:
            type: string
        stateStorageProviderImplementation:
          type: string
        stateStorageServiceUrl:
          type: string
        superUserRoles:
          uniqueItems: true
          type: array
          items:
            type: string
        threadContainerFactory:
          $ref: '#/components/schemas/ThreadContainerFactory'
        tlsAllowInsecureConnection:
          type: boolean
        tlsCertRefreshCheckDurationSec:
          type: integer
          format: int64
        tlsCertificateFilePath:
          type: string
        tlsEnableHostnameVerification:
          type: boolean
        tlsEnabled:
          type: boolean
        tlsEnabledWithKeyStore:
          type: boolean
        tlsKeyFilePath:
          type: string
        tlsKeyStore:
          type: string
        tlsKeyStorePassword:
          type: string
        tlsKeyStoreType:
          type: string
        tlsProvider:
          type: string
        tlsRequireTrustedClientCertOnConnect:
          type: boolean
        tlsTrustCertsFilePath:
          type: string
        tlsTrustChainBytes:
          type: array
          items:
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
            format: byte
        tlsTrustStore:
          type: string
        tlsTrustStorePassword:
          type: string
        tlsTrustStoreType:
          type: string
        topicCompactionFrequencySec:
          type: integer
          format: int64
        uploadBuiltinSinksSources:
          type: boolean
        useCompactedMetadataTopic:
          type: boolean
        useTls:
          type: boolean
        validateConnectorConfig:
          type: boolean
        webServiceHaProxyProtocolEnabled:
          type: boolean
        webServiceLogDetailedAddresses:
          type: boolean
        webServiceTlsCiphers:
          uniqueItems: true
          type: array
          items:
            type: string
        webServiceTlsProtocols:
          uniqueItems: true
          type: array
          items:
            type: string
        webServiceTrustXForwardedFor:
          type: boolean
        workerHostname:
          type: string
        workerId:
          type: string
        workerListProbeIntervalSec:
          type: integer
          format: int32
        workerPort:
          type: integer
          format: int32
        workerPortTls:
          type: integer
          format: int32
        workerWebAddress:
          type: string
        workerWebAddressTls:
          type: string
        zooKeeperAllowReadOnlyOperations:
          type: boolean
        zooKeeperCacheExpirySeconds:
          type: integer
          format: int32
        zooKeeperOperationTimeoutSeconds:
          type: integer
          format: int32
        zooKeeperSessionTimeoutMillis:
          type: integer
          format: int64
    WorkerFunctionInstanceStats:
      type: object
      properties:
        metrics:
          $ref: '#/components/schemas/FunctionInstanceStatsData'
        name:
          type: string
    WorkerInfo:
      type: object
      properties:
        port:
          type: integer
          format: int32
        workerHostname:
          type: string
        workerId:
          type: string
    WorkerService:
      type: object
      properties:
        functions:
          $ref: '#/components/schemas/FunctionsWorkerService'
        functionsV2:
          $ref: '#/components/schemas/FunctionsV2WorkerService'
        initialized:
          type: boolean
        sinks:
          $ref: '#/components/schemas/SinksWorkerService'
        sources:
          $ref: '#/components/schemas/SourcesWorkerService'
        workerConfig:
          $ref: '#/components/schemas/WorkerConfig'
        workers:
          $ref: '#/components/schemas/WorkersWorkerService'
    Workers:
      type: object
    WorkersWorkerService:
      type: object
x-original-swagger-version: "2.0"
